{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"DigiKAR QGIS hands-on session, 11-12 July 2023 The aim of this session is to provide academics and students in the field of spatial history with a comprehensive introduction to the GIS software QGIS. Particular attention will be given to the QGIS features that are most valuable for historical studies: Georeferencing and Vectorisation /Digitisation. The course will be divided into two main parts, each of which will involve methodology and technical exercises. The first part will cover the georeferencing capabilities of QGIS for assigning geographic coordinates to existing digitised maps. The second part will focus on vectorisation, i.e. the creation of geolocalised digital data from previously georeferenced maps. Particular attention will be paid to the collaborative capabilities of QGIS to collectively build a shared geohistorical database from historical maps. The workshop is open to members of the Leibniz Institute for Regional Geography and the DigiKAR project . Registration Registration is mandatory for all participants, see #Registration . Full time participation is highly advised as the individual parts of the workshop build on each other. \ud83d\udcdd Details When : Tuesday 11 (9:30 - 18:00) and Wednesday 12 (9:30 - 15:00) July 2023 Where : Leibniz-Institut f\u00fcr L\u00e4nderkunde, Leipzig (IfL), Schongauerstra\u00dfe 9, 04328 Leipzig. Who : See section Contacts Main language : English \ud83e\uddf0 Technical requirements Bring your own laptop , with an external mouse. Vectorizing with the pad is awful! It is recommended that your computer has at least 4Gb of RAM . QGIS will run with less, but some heavy operations (e.g. georeferencing) may fail. Install the last stable version of QGIS before the session. As of 28 June 2023, the version QGIS available for download is v3.32 . Any version >= 3.30 is ok . If you are taking part in the georeferencing session on Tuesday, ensore that you have at least 25Gb of disk space available . Ensure that the Wi-Fi configuration on your computer is not restricted by a proxy server or a VPN. QGIS will need to access a remote GIS database on network port 5432, which might be blocked due to your organization's security policies. \ud83d\uddf3\ufe0f Registration Registration is closed Registration is now closed , as the maximum number of participants has been reached. All participants will receive confirmation of their registration within a few days. Please note that your registration is not validated until you have received a confirmation email. We are required to limit the number of participants due to space constraints. Therefore we adopt a \"first come, first served\" policy and will close registrations as soon as the maximum number of attendees is reached. However, we may be obliged to turn away the last registrants in the event of large numbers.","title":"DigiKAR QGIS hands-on session, 11-12 July 2023"},{"location":"#digikar-qgis-hands-on-session-11-12-july-2023","text":"The aim of this session is to provide academics and students in the field of spatial history with a comprehensive introduction to the GIS software QGIS. Particular attention will be given to the QGIS features that are most valuable for historical studies: Georeferencing and Vectorisation /Digitisation. The course will be divided into two main parts, each of which will involve methodology and technical exercises. The first part will cover the georeferencing capabilities of QGIS for assigning geographic coordinates to existing digitised maps. The second part will focus on vectorisation, i.e. the creation of geolocalised digital data from previously georeferenced maps. Particular attention will be paid to the collaborative capabilities of QGIS to collectively build a shared geohistorical database from historical maps. The workshop is open to members of the Leibniz Institute for Regional Geography and the DigiKAR project . Registration Registration is mandatory for all participants, see #Registration . Full time participation is highly advised as the individual parts of the workshop build on each other.","title":"DigiKAR QGIS hands-on session, 11-12 July 2023"},{"location":"#details","text":"When : Tuesday 11 (9:30 - 18:00) and Wednesday 12 (9:30 - 15:00) July 2023 Where : Leibniz-Institut f\u00fcr L\u00e4nderkunde, Leipzig (IfL), Schongauerstra\u00dfe 9, 04328 Leipzig. Who : See section Contacts Main language : English","title":"\ud83d\udcdd Details"},{"location":"#technical-requirements","text":"Bring your own laptop , with an external mouse. Vectorizing with the pad is awful! It is recommended that your computer has at least 4Gb of RAM . QGIS will run with less, but some heavy operations (e.g. georeferencing) may fail. Install the last stable version of QGIS before the session. As of 28 June 2023, the version QGIS available for download is v3.32 . Any version >= 3.30 is ok . If you are taking part in the georeferencing session on Tuesday, ensore that you have at least 25Gb of disk space available . Ensure that the Wi-Fi configuration on your computer is not restricted by a proxy server or a VPN. QGIS will need to access a remote GIS database on network port 5432, which might be blocked due to your organization's security policies.","title":"\ud83e\uddf0 Technical requirements"},{"location":"#registration","text":"Registration is closed Registration is now closed , as the maximum number of participants has been reached. All participants will receive confirmation of their registration within a few days. Please note that your registration is not validated until you have received a confirmation email. We are required to limit the number of participants due to space constraints. Therefore we adopt a \"first come, first served\" policy and will close registrations as soon as the maximum number of attendees is reached. However, we may be obliged to turn away the last registrants in the event of large numbers.","title":"\ud83d\uddf3\ufe0f Registration"},{"location":"contact/","text":"Contact Single Contact Address You can contact the organizers by sending an email to: digikar-qgis.rg2ug@aleeas.com You can also create an issue on our tracker . Organizers Bertrand Dum\u00e9nieu Research engineer in geographical information sciences and geospatial humanities at EHESS. Falk Bretschneider Professor of history at the EHESS. Jana Moser Head of the Cartography and Visual Communication Department at IfL This tutorial is part of the DigiKAR research project.","title":"Contact"},{"location":"contact/#contact","text":"","title":"Contact"},{"location":"contact/#single-contact-address","text":"You can contact the organizers by sending an email to: digikar-qgis.rg2ug@aleeas.com You can also create an issue on our tracker .","title":"Single Contact Address"},{"location":"contact/#organizers","text":"Bertrand Dum\u00e9nieu Research engineer in geographical information sciences and geospatial humanities at EHESS. Falk Bretschneider Professor of history at the EHESS. Jana Moser Head of the Cartography and Visual Communication Department at IfL This tutorial is part of the DigiKAR research project.","title":"Organizers"},{"location":"programme/","text":"Programme \ud83d\udea7 The programme is still being finalized and may be subject to minor changes in the coming weeks Tuesday 11 July, 9:15 - 18:00 09:15 - Open welcome & installation time : connecting to the Wifi, etc. Morning: Introduction to (Q)GIS 09:30 - General introduction 09:45 - Tutorial #1: getting started with QGIS 12:00 - lunchtime Afternoon: Georefencing historical maps and introduction to vectorisation 14:00 - Overview and best practices for georeferencing historical maps 14:30 - Tutorial #2: experimentations with the Meilenbl\u00e4tter von Sachsen. 17:00 - Tutorial #3 : introduction to map vectorisation in QGIS 18:00 - end of the day Wednesday 12 July, 9:30 - 15:00 Morning: Collaborative Vectorisation 09:30 - Tutorial #4: collaborative vectorisation of the Meilenbl\u00e4tter von Sachsen with QGIS and PostGIS 12:00 - lunchtime Afternoon: Discussion 14:00 - Q&A session & general discussion 15:00 - end of the day","title":"Programme"},{"location":"programme/#programme","text":"\ud83d\udea7 The programme is still being finalized and may be subject to minor changes in the coming weeks","title":"Programme"},{"location":"programme/#tuesday-11-july-915-1800","text":"09:15 - Open welcome & installation time : connecting to the Wifi, etc. Morning: Introduction to (Q)GIS 09:30 - General introduction 09:45 - Tutorial #1: getting started with QGIS 12:00 - lunchtime Afternoon: Georefencing historical maps and introduction to vectorisation 14:00 - Overview and best practices for georeferencing historical maps 14:30 - Tutorial #2: experimentations with the Meilenbl\u00e4tter von Sachsen. 17:00 - Tutorial #3 : introduction to map vectorisation in QGIS 18:00 - end of the day","title":"Tuesday 11 July, 9:15 - 18:00"},{"location":"programme/#wednesday-12-july-930-1500","text":"Morning: Collaborative Vectorisation 09:30 - Tutorial #4: collaborative vectorisation of the Meilenbl\u00e4tter von Sachsen with QGIS and PostGIS 12:00 - lunchtime Afternoon: Discussion 14:00 - Q&A session & general discussion 15:00 - end of the day","title":"Wednesday 12 July, 9:30 - 15:00"},{"location":"tutorials/material/material/","text":"\ud83e\uddf0 Material \ud83d\udcda Tutorials in PDF https://www.swisstransfer.com/d/56e0de6a-7c90-4682-b1b5-6dc8a367936a (34Mb) \ud83d\udcbe Tutorial data Tutorial 1 https://www.swisstransfer.com/d/64cf26cf-2824-4ae0-9dbe-be09ff12a4f5 (1.5Mb) Tutorial 2 https://www.swisstransfer.com/d/d9b7b3c8-8c4a-4b7d-b988-acd20da73d69 (\u26a0\ufe0f 1.6Gb) Tutorial 3 https://www.swisstransfer.com/d/24a42765-42ac-49a1-83f2-5c8b6cf04e82 (200Kb) Tutorial 4 https://www.swisstransfer.com/d/c36a7046-2d38-4ee6-8d8e-245c37cad77b (200Kb) \ud83d\udde8\ufe0f Slides https://www.swisstransfer.com/d/13a8a52c-0428-4cfa-befa-5e6fe0effb49 (4Mb) \ud83d\uddfa\ufe0f Meilenbl\u00e4tter extract on the DigiKAR case study areas https://www.swisstransfer.com/d/92437285-5a84-41c6-8a50-0de161539866 (\u26a0\ufe0f 30Gb)","title":"\ud83e\uddf0 Material"},{"location":"tutorials/material/material/#material","text":"","title":"\ud83e\uddf0 Material"},{"location":"tutorials/material/material/#tutorials-in-pdf","text":"https://www.swisstransfer.com/d/56e0de6a-7c90-4682-b1b5-6dc8a367936a (34Mb)","title":"\ud83d\udcda Tutorials in PDF"},{"location":"tutorials/material/material/#tutorial-data","text":"Tutorial 1 https://www.swisstransfer.com/d/64cf26cf-2824-4ae0-9dbe-be09ff12a4f5 (1.5Mb) Tutorial 2 https://www.swisstransfer.com/d/d9b7b3c8-8c4a-4b7d-b988-acd20da73d69 (\u26a0\ufe0f 1.6Gb) Tutorial 3 https://www.swisstransfer.com/d/24a42765-42ac-49a1-83f2-5c8b6cf04e82 (200Kb) Tutorial 4 https://www.swisstransfer.com/d/c36a7046-2d38-4ee6-8d8e-245c37cad77b (200Kb)","title":"\ud83d\udcbe Tutorial data"},{"location":"tutorials/material/material/#slides","text":"https://www.swisstransfer.com/d/13a8a52c-0428-4cfa-befa-5e6fe0effb49 (4Mb)","title":"\ud83d\udde8\ufe0f Slides"},{"location":"tutorials/material/material/#meilenblatter-extract-on-the-digikar-case-study-areas","text":"https://www.swisstransfer.com/d/92437285-5a84-41c6-8a50-0de161539866 (\u26a0\ufe0f 30Gb)","title":"\ud83d\uddfa\ufe0f Meilenbl\u00e4tter extract on the DigiKAR case study areas"},{"location":"tutorials/tutorial_1/text/","text":"1. Getting started with QGIS This tutorial is a step-by-step introduction to QGIS, from discovering the GUI to geospatial processing, through a series of practical exercises based on the geohistorical data leveraged in the DigiKAR project. A set of icons is used to highlight the nature of specific blocks or sections: \u26a0\ufe0f and \u2757 denote an important information; \u2139\ufe0f is used for optional info or details on a specific point. \ud83d\udee0\ufe0f marks the beginning of an \"exercise\". Now it's your turn! The icon is used to remind you to save the project to prevent data loss if QGIS crashes ! \u2757 LANGUAGE. All exercices have been written with QGIS in English. Going through the tutorial with QGIS in German should not be too difficult, as most features have a distinctive icon image. However, if you installed QGIS in German and wish to temporarily switch to English, once you have run QGIS open the menu Settings->Options->Locale , check Override system locale and set to \ud83c\uddfa\ud83c\uddf8 American English . QGIS must be restarted for changes to take effect. \u2757 REMINDERS Save your QGIS project regularly , the software might not be super stable on your computer, especially if your OS is Windows ! When editing vector data, don't forget to save the layer also regularly ! Be carefull with character encoding on Windows when loading geodata from local files, as the default encoding is usually not UTF-8 on this OS. Similar issues may or may not occur on MacOS... \u26a0\ufe0f DISCLAIMER . Some of the data and documents used in this tutorial are extracts from datasets created by other organizations that are not always available as open data. We therefore ask you not to distribute or publish the content of this tutorial. Lastly, apologies for all the frenchisms in the text \ud83d\ude42 A. Preliminary steps a. Setting up the working directory Create a new folder in the location of your choice to store the material and projects of the next tutorials. This folder will be your working directory. Download the data for this tutorial (~1.5Mb): https://www.swisstransfer.com/d/64cf26cf-2824-4ae0-9dbe-be09ff12a4f5 Extract the zip archive to your working directory. b. Creating a new QGIS project Before starting to experiment with the GUI, let's start by creating a project to hold all the data and configuration of the tutorials. On start-up, QGIS is initialized with an empty project, labelled Untilted Project . \ud83d\udee0\ufe0f Let's start by saving this new project on the hard disk with a better name; this will be the project for the rest of the hands-on session. From the QGIS top menu, go to Project->Save as , or press CTRL+Shift+S and save the project as main_project in your working directory (no need to set the file extension). The top banner of QGIS should now display main_project to indicate that this is the currently opened project. \u2139\ufe0f A project is a workspace, savec in .QGZ files. Projects store a large number of settings: customisation of the GUI, map projections, links to data sources, the list of loaded GIS layers with their symbolisation, input forms, and so on. However, it is important to note that a project file does not actually store any geospatial data , but only configurations and metadata. The actual data may be stored locally in separate files, or may come from remote servers on the Web. \u26a0\ufe0f Ensure the code EPSG:4326 apprears in the bottom-right corner of the QGIS footbar (see below). If not, please notify one of the session organisers before proceeding further. 1. First steps in QGIS This is the interface you should be seeing now: The main GUI layout is composed of 3 types of visual components: Menus , which provide hierarchical access to QGIS functions, options and preferences; Panes , to display data in different ways, including the main map view. Toolbars , that are visual shortcuts to all features found in the menus. Let's discover these different visual elements through hands-on experience. a. Loading the OSM basemap with a QGIS Plugin For the moment, the project is completely blank. Let's fix that by loading OpenStreetMap as our first data source! \u2139\ufe0f The volunteer geographic information project OpenStreetMap (OSM) creates multi-scale world maps from its open-data geodatabase, and publishes them on the Web for everyone and for free. QGIS has a plugin that makes it very easy to load OSM basemaps, however is not installed by default. \ud83d\udee0\ufe0f In the QGIS top menu, go to Plugins->Manage and Install Plugins... . It will open a window listing all the plugins available on the official plugins hub at https://plugins.qgis.org/. In the tab All , search for QuickMapServices and click on Install Plugin . Once installed, close the popup window. The QuickMapServices plugin is now accessible from the QGIS main menu, in Web->QuickMapServices . In QuickMapServices , select OSM->OSM Standard to load the standard OSM basemap into the project. \u2139\ufe0f QGIS comes with over 1,000 plugins for all kinds of uses, so feel free to explore https://plugins.qgis.org/ ! Please note that some plugins, although open-source, serve as access points to commercial APIs (e.g. MapTiler). b. Navigating in the map In QuickMapServices , click OSM->OSM Standard to load the default OpenStreetMap basemap into QGIS. \u2139\ufe0f The map may not have the same shape as in the figure above; it depends on the default cartographic projection used in your QGIS. Let's explore some of the most important components of the QGIS GUI: the map navigation tools (1), the map view (2), and the Layers pane (3). The Map navigation tools (1) take up a small part of the QGIS toolbar, usually in the top left. They are used to navigate within the map view (2) in various ways. \u2139\ufe0f Feel free to hover your mouse over the different tools to display their tooltips! Most QGIS map tools work in a similar way. Clicking on a tool activates it, wich often makes the mouse cursor to change accordingly. The tool can then be used on the map view (2). In some cases, clicking on the tool icon immediately triggers an action, such as Zoom Full , which zooms to the extent of all currently mapped data. Note that the OSM basemap also appears in the Layers (3) pane. If you uncheck the box next to OSM Standard , it will hide that layer in the map view. \ud83d\udee0\ufe0f Use the Pan and Zoom tools on the map view (2) to roughly position yourself over Saxony. :info: With the Zoom tool, you can draw a rectangle on the map to easily zoom to a specific area. \u2139\ufe0f You can set the map view to a specific scale by editing the Scale value in the QGIS footbar. For instance, set the scale to 1:500,000. Now it's time to save the project state. Go to the Project->Save menu, press CTRL+S , or use the floppy disk tool . Saving the QGIS project stores the scale and position of the view, so every time you reopen the project, you will be in the same place. C. Map projections and coordinate reference systems Perhaps have you noticed that the OSM Standard basemap appears stretched in the East-West direction. This is due to the cartographic projection used in the map view of the project. Let's take a moment to delve into this topic. a. Map projections Map projections try to portray the surface of the earth, or a portion of the earth, on a flat piece of paper or computer screen. In layman\u2019s term, map projections try to transform the earth from its spherical shape (3D) to a planar shape (2D). https://docs.qgis.org/3.28/en/docs/gentle_gis_introduction/coordinate_reference_systems.html Like any GIS, QGIS displays data on a map that is geolocated on the Earth's surface using coordinates. For example, the OSM Standard basemap provided by OpenStreetMap is made of thousand of small tiles, each one associated with geographic coordinates. You can easily observe this by moving the mouse cursor over the map view while looking at the status bar. You will notice that the cursor position is displayed in the Coordinate section as latitude and longitude: Indeed, latitude and longitude are positions on the surface of a spherical or ellipsoidal model of the Earth. However, QGIS is made for 2 dimensional cartography and is unable to show a 3D representation of the Earth. Map projections are mathematical transformations that \"unfold\" the Earth's surface onto a flat plane while preserving some geometric properties of the terrain, either distances, angles, or shapes. However, this process is not without consequences, similar to trying to flatten the skin of an orange without cutting it into pieces. Flattening a sphere can only be done at the expense of distortions, and map projections cannot simultaneously preserve distances, angles, and areas all together. For more information about map projections, see https://gisgeography.com/map-projections/ Numerous map projections are available in QGIS, each with its own geometric properties, pros and cons, area of use, etc. Choosing a projection depends on the purpose of the map, its scale, the area to cartography and the use case. However, the Robinson and Mercator projections are dominant nowadays for small scale cartography (i.e. large areas). Mercator is typically used for world maps. Webmapping applications most often use a simplified version of this projection, called Pseudo-Mercator because it relies on a spherical model of the Earth instead of an ellipsoidal one.. In the current project, QGIS is using a cartographic projection named ** Equirectangular or Plate-Carr\u00e9e** to display the Earth sphere on a 2 dimensional plane. You can play around with the demo below https://www.jasondavies.com/maps/transition/ to see how different cartographic projections distort the shape of the Earth. Choose Equirectangular (Plate-Carr\u00e9e) in the demo to visualize the projection currently used by QGIS. As you may notice in the demo or on the map displayed in QGIS, the higher the latitude the more horizontally stretched is the map. Indeed, the Plate-Carr\u00e9e projection is not suited for Europe and even less for a \"relatively\" small area like Germany/Saxony. However, there are other projections available, integrated into what is known as Coordinate Reference Systems (CRS). b. Coordinate Reference Systems \ud83d\udee0\ufe0f Notice the code EPSG:4326 in the bottom right of the footbar of QGIS: Click on this code to open the CRS tab in the project properties. Let's take a closer look at points (1) and (2) from the figure above. In (1), we can see that the code EPSG:4326 displayed in QGIS is the identifier of the Coordinate Reference System (CRS) named WGS 84 . We have seen that map projections exist to display a portion of the surface of the 3D Earth's sphere onto a 2D plane. A Coordinate Reference System is a structured set of parameters that define, in a standardized framework, how to convert geographic coordinates on the Earth's surface (latitude/longitude) to 2D coordinates on a plane using a specific geometric transformation, i.e. a map projection. \u2139\ufe0f There are thousands of standardized CRS, which can be explored on https://epsg.io/ . Each CRS is tailored to a specific scale, region of the world, accuracy, and usage. It is possible to create custom CRS in QGIS, but that is beyond the scope of this tutorial. Here is a very nice demo to compare different cartographic projections: https://observablehq.com/@d3/projection-comparison Let's quickly examine the CRS WGS 84 / Pseudo-Mercator . To do this, search for this CRS using the field Filter and select it (you can write the name or the identifier EPSG:3857 ). In (2), take a look at the WKT property, which provides the structured definition of this CRS. Here are the main elements of this CRS: ------------------------------------------------------------ BLOCK #0 : DEFINITION ------------------------------------------------------------ PROJCRS[\"WGS 84 / Pseudo-Mercator\", ------------------------------------------------------------ BLOCK #1 : BASEGEOGCRS ------------------------------------------------------------ BASEGEOGCRS[\"WGS 84\", ENSEMBLE[\"World Geodetic System 1984 ensemble\", ... ELLIPSOID[\"WGS 84\",6378137,298.257223563, LENGTHUNIT[\"metre\",1]], ENSEMBLEACCURACY[2.0]], PRIMEM[\"Greenwich\",0, ANGLEUNIT[\"degree\",0.0174532925199433]], ID[\"EPSG\",4326]], ------------------------------------------------------------ BLOCK #2 : MAP PROJECTION ------------------------------------------------------------ CONVERSION[\"Popular Visualisation Pseudo-Mercator\", ID[\"EPSG\",1024]], PARAMETER[\"Latitude of natural origin\",0, ANGLEUNIT[\"degree\",0.0174532925199433], ID[\"EPSG\",8801]], PARAMETER[\"Longitude of natural origin\",0, ANGLEUNIT[\"degree\",0.0174532925199433], ID[\"EPSG\",8802]], PARAMETER[\"False easting\",0, LENGTHUNIT[\"metre\",1], ID[\"EPSG\",8806]], PARAMETER[\"False northing\",0, LENGTHUNIT[\"metre\",1], ID[\"EPSG\",8807]]], CS[Cartesian,2], AXIS[\"easting (X)\",east, ORDER[1], LENGTHUNIT[\"metre\",1]], AXIS[\"northing (Y)\",north, ORDER[2], LENGTHUNIT[\"metre\",1]], ------------------------------------------------------------ BLOCK #3 : USAGE DOCUMENTATION ------------------------------------------------------------ USAGE[ SCOPE[\"Web mapping and visualisation.\"], AREA[\"World between 85.06\u00b0S and 85.06\u00b0N.\"], BBOX[-85.06,-180,85.06,180]], ID[\"EPSG\",3857]] Without going much details, let's simply observe: Block #0: This is a PROJ[ected]CRS , meaning it is a CRS with a cartographic projection. With this CRS, the coordinates are in 2 dimensions on a plane! On the other hand, GEOG[raphic]CRS , such as the previous WGS 84 (EPSG:4326), do not carry a map projection; Corodinates in such CRSs are expressed in latitude and longitude. Block #1: This CRS is based on a 3D model of the Earth defined in the CRS WGS 84 (EPSG:4326), which contains an ellipsoidal approximation of the true shape of the Earth. Block #2: This CRS projects the geographic coordinates on a plane using a mathematical transformation. The parameters for this transformation are described in this block. Block #3: Lastly, Block #3 describes the extent to which this CRS is valid, ensuring it is not too imprecise for a particular region of the Earth. \u2139\ufe0f When using a GEOGCRS like WGS 84 (EPSG:4326), QGIS arbitrarily uses an Equirectangular projection when such a CRS is used. This is why, at start, QGIS showed geographic coordinates and displayed a very stretched OSM map. \u2139\ufe0f Nowadays, the most commonly used geographic CRS is the international CRS WGS 84 because the GPS system is built upon it. However, other geographic CRS have been created for specific regions of the world. For instance, ETRF89 (EPSG:9059) is the standard geographic CRS for Europe. For most applications in this region, the differences between WGS 84 and ETRF89 can be considered negligible, except for high-precision applications. All official European PROJCRSs rely on ETRF89 and the transformation between WGS 84 and ETRF89 is shipped with all modern GIS. \u2139\ufe0f The Well Known Text (WKT) format for CRS, which is also used to represent vector geometries, is described in the standard https://docs.ogc.org/is/18-010r7/18-010r7.html#108 c. On-the-fly projection in QGIS In the CRS window make sure you th the CRS EPSG:3857 is selected and click OK . Observe how the overall shape of the map is completely different now: Take a look at the Coordinate field in the footbar: it no longer displays geographic coordinates in degrees, but rather 2D Cartesian coordinates! These coordinates are in the 2D reference system of the projected CRS Pseudo-Mercator (EPSG:3857), which uses the Mercator map projection. With a different projected CRS, we would have a different 2D reference system and thus different coordinates. We can see that QGIS has dynamically projected the OpenStreetMap map to the EPSG:3857 CRS. This is known as on-the-fly projection , a tremendously useful feature which allows to load geographic data with coordinates in various CRSs and to display them in a single coordinate system. This illustrates an key property of geographic data: each source of geographic data has its own CRS . The GIS software dynamically reprojects the data to a unified CRS, but it does not modify the CRS of the data itself . Here, QGIS has never actually altered the coordinates of the OSM basemap, the images are simple reprojected before being displayed on the map view. This implies that two data layers can overlay in the map view, while actually being in very different coordinate reference systems. This is often misleading to new GIS enthusiasts and may lead to unexpected results in spatial analysis and processing. QGIS is mostly able to perform calculations on vector data in different CRSs without any trouble, but some operations on rasters (or vector+rasters) still require the CRS of all input data to be the same. A good practice is to ensure that all the data being processed is in the same CRS to avoid any issue. Later in the tutorial, we will see how to truly change the CRS of a data layer, rather than just reprojecting it in the QGIS map view. Don't forget to save the project ! D. Adding more geodata Now that we have covered the basics of the QGIS interface and map projections, let's load some more data into QGIS. a. Adding the Meilenbm\u00e4tter von Sachsen from a remote Web Map Service Web Map Service (WMS) is a standard protocol published by the Open Geospatial Consortium for delivering georeferenced maps over the web as data streams. With WMS, you can share and load georeferenced map images that would largely exceed the capabilities of mainstream computers. The Hochschule f\u00fcr Technik und Wirtschaft Dresden has published as a WMS the largest historical map of Saxony made from high resolution digisations of the ~300 Meilenbl\u00e4tter von Sachsen . \ud83d\udee0\ufe0f Let's load this map into QGIS. We first need to configure the connection to the HTW-Dresden WMS server. To do this, go to the Layer -> Data Source Manager menu, then select the WMS/WMTS tab, and click on New to add a new WMS source: Then enter the connection details for the server at the URL below, and click OK: Here is the servers' URL to copy-paste: https://geoinformatik.htw-dresden.de/ms/mbl The WMS server should now be available in the WMS/WMTS panel. All you need to do now is click Connect to display the list of available maps. As shown in the figure below, select the layer number 5 named Meilenblatt_V (1), then click Add (3). Check that the coordinate reference system selected for this layer is indeed EPSG:3857 (2). Et voil\u00e0 ! The georeferenced map of Meilenbl\u00e4tter should now show on top of the OpenStreetMap basemap in the main map view ! \u2139\ufe0f If the Meilenbl\u00e4tter layer appear in the Layers panel but is not visible on the map view, you can force QGIS to zoom to the layer. Select the layer Meilenbl\u00e4tter in the Layers panel, then clicking the map tool Zoom to Layer in the QGIS main toolbar. \u2139\ufe0f The arrangement of the layers in the Layers panel reflects the order in which they are displayed in the map view, in descending order. Therefore, one layer below another in the layers panel is also displayed below the other in the map view. You can change this order very easily by moving the layers with a simple drag and drop in the Layers panel. Don't forget to save the project ! b. Loading the places from the Historisches Ortsverzeichnis von Sachsen from a CSV We have so far only used georeferenced images. This kind of geographic data is referred to as raster data , i.e. they are made of a multi-dimensional matrix of pixels. The geographical entities they portray are not structured as digital data but that could be queried, processed, enriched with attributes,... At the other end of the geographic data spectrum, vector data are structured digital entities composed of a set of attributes and a discrete geometry shape (a point, polyline, polygon, etc.). In simple terms, we could say that vector geospatial data is a single row in an Excel-type table, with a column containing its coordinates. Broadly speaking, a vector data is a line in an Excel spreadsheet, with a special column containing it geometry, and raster data are images with geographical coordinates. In fact, QGIS can actually process an Excel spreadsheet as if it were a set of vector data. \ud83d\udee0\ufe0f Let's try this with the file Tutorial_1/data/hov_places.csv . The extension .csv is short for Comma Separated Values, a very simple text-based datatable format where cells are separated by a special character. CSV are typically created from spreadsheet programs such as Excel or LibreOffice Calc. \u2139\ufe0f If you open this file in Open/LibreOffice Calc or Excel (in Excel you may have to go to the tab Data and select from text ), or in any other text editor, you will see that each line corresponds to a named place and that it contains two columns named lon[gitute] and lat[itude] containing the point coordinates of this place. To load this file into QGIS, go to the menu Layer->Data Source Manager and follow these steps: 1. Open the tab Delimited Text 2. Click on the button to the right of File Name to fetch and parse the content of Tutorial_1/data/hov_orte.csv . 3. \u26a0\ufe0f Check that the encoding is UTF-8 (especially on Windows and MacOS!) and the File Format set to CSV 4. Tell QGIS where to find the geometry of each place in Geometry Definition : - \"Point coordinates\" means that geometries are simple points whose coordinates are in separate columns. Here, the X field (i.e. \"east/west\") is the column lon and the Y field is the column lat . - Set the Geometry CRS. Be careful, the table contains geographic coordinates, not projected ones, so the CRS is EPSG:4326 (WGS 84) and not EPSG:3857. On-the-fly projection will display everything in Pseudo-mercator anyway. 5. Click \"Add\" and then \"Close\" The result should resemble the figure below (colours may vary): QGIS maps only the positions of the HOV loaded from the CSV, however the whole data table has been imported with much more information, like the place name, suface and so on. Let's confirm that all the data has indeed been loaded by looking at the layer's attribute table , which contains all the non-geometric attributes of the HOV places. Right-click (on MacOS: Command + click) on the layer hov_places in the Layers pane, and select Open Attribute Table . The attribute table can be used to add or delete fields from a vector layer, to edit field values, to calculate new fields from complex expressions... \u2139\ufe0f The attribute table will not be explained any further in this tutorial, but if you want to delve deeper into this subject, QGIS has a very comprehensive tutorial available at https://docs.qgis.org/3.28/en/docs/user_manual/working_with_vector/attribute_table.html Don't forget to save the project ! b. Loading a subset of the road network in the Meilenbl\u00e4tter, in vector format We have seen an example of point data loaded from a CSV data table, but many more formats exist, that have been specially designed for geospatial data. One of the most common formats is GeoJSON, wich is the standard for Web REST APIs and is widely used to publish and share vector geospatial data. \ud83d\udee0\ufe0f In the Tutorial_1/data/ folder is a file called road_network.geojson . It contains a piece of the road network visible on the Meilenbl\u00e4tter, in vector format. Let's open it in QGIS. To do this, you have two options: 1. simply drag and drop the file to the QGIS map view. \u26a0\ufe0f On Windows and MacOS it is safer to use method 2 to prevent QGIS to automatically chose the encoding based on the Locale, wich might not be UTF-8 on these two operating systems; 2. or go to Layer->Data Source Manager and open the file from the tab Vector . Here, specify the encoding to be UTF-8. The layer should be added to the map and visible to the North of Zwickau: \u2139\ufe0f Of the 4 layers opened, 2 are stored in the cloud (OSM and the Meilenbl\u00e4tter), and 2 were imported from local files. Because the reference to the layer sources (WMS URLs or file paths) are saved in the project file, all layers will be loaded automatically. However, the data is never actually stored in the project file , but is simply loaded when the project is opened. So, if you want to copy your QGIS to another computer, or create a nackup, do not forget to copy the data files along with the QGIS project file . Don't forget to save the project ! E. Playing with symbology Both vector layers loaded are displayed on the map with an automatically generated style, usually quite ugly and not relevant. This is an opportunity to experiment a little with the QGIS map symbolisation engine. a. Displaying HOV places with their names Let's start with the hov_places layer. We have already seen that each point is associated with a set of attributes that do not appear on the map, but are accessible from the layer's attribute table . \ud83d\udee0\ufe0f One of these attribute is the place's name, stored in the field/column Ortsname . Let's display it on the map, to make browsing easier! Everything related to the symbolization of a layer is available in the Layer properties which can be opened either by right-clicking on the layer in the Layers Pane and choosing the Properties... option, or from the Layer->Layer Properties menu. This will open a window with a number of tabs. Choose the Labels tab (1, see below) and specify in (2) that you want to display Single Labels : This will unlock all the labeling options for the hov_places layer: First, select the data field to be used as the label (1): Ortsname . Using the various tabs in the panel (2), create the labels: in Arial font, bold, size 3.5 millimetres surrounded by a 1 millimetre white buffer placed around the point at a distance of 0.5 millimetres whose visibility depends on the scale, and which are hidden beyond 1:300,000. Bonus excercise Use the expression builder in data-defined Override -> Edit (see fig. below) to toggle the scale-dependant visibility only for places with Flaeche_in_ha_integer less than 1000 ha. The result should look like this: b. Categorized symbols on the road network Let's now consider the layer road_network . Looking at its attribute table, we see that it contains a field named category , which is the nature of this road according to the legend of the Meilenbl\u00e4tter: \ud83d\udee0\ufe0f Let's create a different symbology for each category of road. Open the properties of the road_network layer, then the Symbology tab and choose a Categorized symbology. Apply this categorisation to the category field and click Classify once to generate a legend line for each category: Click on Apply to see the results of this first rough automatic styling. You can now finely adjust the symbolisation of each category by selecting each line of legend, and then clicking on Symbol to open the Symbol Selector window. Create a specific style for the Strasse category. Let's recreate the style of the roads depicted on the Meilenbl\u00e4tter in the area covered by the vector network The symbol is a double red line, one side solid and the other dashed, with an orange background. To do this, in the Symbol Selector window in the Strasse category, you can stack strokes symbols and use the offset parameter to create different borders. For example: A solid Simple Line of width 1.5 mm, coloured in semi-transparent orange... ...overlayed by a second Simple Line , dashed, of width 0.5mm, with an offset of 0.8mm. ...overlayed by a third Simple Line , solid, also of width 0.5mm, with an offset of -0.8mm. Once you're done, click on OK and then Apply to see the result: \u2139\ufe0f Unlike OK , the Apply button does not close the Symbolization window, wich makes super easy to experiment with the symbology in a trial&error approach ! The roads should now be displayed in the style of the Meilenbl\u00e4tter : Using on the legend of the Meilenbl\u00e4tter, create a symbol for each remaining road category that resemble the actual symbolisation on the historical map. In the case of StadtStrasse , wich is not in part of the above legend, simply set a thin black line ! Don't forget to save the project ! F. Geospatial processing: mapping a one-day walking trip in the Meilenbl\u00e4tter Now that all the data layers have been loaded, it is time to experiment with some of the the geospatial processing capabilities of QGIS. In this section, we're going to compute and map the area that could be covered by an individual travelling on foot on the road network depicted in the Meilenbl\u00e4tter. \u2757 Obviously, this is only a learning exercise with no scientific ambition. In order for the result to be more realistic, much more information would be needed: the full fine-grained raod network (footpaths are missing, the network storps at the map limits, ...), the DEM to determine the elevation of each road, and so on. Let's proceed in several steps that build on each other. a. Step #1: Computing the network accessibility from a given point Firstly, we need to know which part of the road network can be reached from a given starting point in a given time. QGIS offers a large number of processing options, accessible from the processing->Toolbox menu. The one we're interested in is Service Area (from point) available in the category Network Analysis . Double-click on the processing to open its settings window. \u2139\ufe0f For more details about the Network Analysis tools, check the doc : https://docs.qgis.org/3.28/en/docs/user_manual/processing_algs/qgis/networkanalysis.html Let's take a closer look at the prameters required by the Service Area processing: Obviously, we need a navigable network for routing calculation to be possible. Lucky for us, this is the case for road_network \ud83d\ude42 Select this layer in the Vector layer representing network field. Path type to calculate takes two possible values, depending on whether the service area is based on a distance or time budget. With Shortest , we look for the portion of the network that can be reached within a certain distance. Conversely, Fastest determines the subnetwork reachable in a given time. Fastest is the relevant value for us, switch the path type value accordingly. Let's skip Start point for now. Travel cost is the available time budget in hours . Set a plausible value for a full day of walk, say 7 hours . In Advanced Parameters we need to set a value for the Default Speed . Set it to 4 km/h . We're almost done ! Let's now chose the the starting point of the trip. Click on the [...] button to the right of Start Point to activate a coordinate picker. Click on the map to define this position as the starting point. Be careful to chose a location close to the network . \u2139\ufe0f Right click anywhere to deactivate the coordinate picker and go back to the processing window. The final processing configuration should be similar to the figure below. Now all you have to do is hit Run ! A new layer named Service area (lines) should have been added to the project: this is the sub-network that can be reached in 7 hours by walking at 4 kilometers/hour from your chosen starting point. For example, here's the part of the network accessible from Schlunzig : b. Step #2: Creation of an approximate accessible area . Now that we know which roads are accessible from the chosen starting point, we can construct an approximate polygon of the area that can be covered in a day's walk. Let's say that once a point in the network has been reached, a traveler can still cover around 1 kilometer as the crow flies to reach his final destination. A rough but very simple way of representing this area is to create a buffer zone around the accessible road segments. However, linear network geometries are too complex for buffer zone calculation to be successful on a laptop. We need to pre-process the Service Area layer to simplify the road geometries. This pre-processing involves several steps: 1. the network visible in the Service Area layer is in fact a single entity with a complex geometry. This can be verified by using the geometry selection tool ![[icon_select.png]] in the QGIS toolbar, then clicking on a network line in the map view. The selected entity is displayed in yellow: you can see that the entire network turns yellow. The first thing we want to do is explode this network into smaller entities corresponding to road sections. To do this, go to Vector->Geoprocessing Tools-> Dissolve , check the option keep disjoint features separate and apply the operation on the layer Service Area . This will create a new temporary layer Dissolved made of mutliple road segments (you can check with the selection tool ![[icon_select.png]]). 2. Now we can simplify the segments geometries. Go to Vector->Geometry Tools-> Simplify and apply a Douglas-Peucker algorithm on the layer Dissolved with a tolerance of 500 meters. This will create a third temporary layer names Simplified . Check on the map view how the new segments have a lesser number of intermediary nodes. We can now safely create the buffer area from the simplified road network. Open the Buffer processing from the Vector->Geoprocessing tools menu and configure the algorithm as such: Run the processing to generate a layer Buffered containing the buffer of 1 kilometer around each road. This layer contain multiple polygons, but we actually want a single polygonal area. The ultimate step is to merge all these buffers into one single entity, using the processing Vector->Geoprocessing Tools-> Dissolve again on the temporary layer Buffered to create the final area: c. Step #3: Saving the final buffer area to a file So far, we've been able to generate temporary files, stored in memory. These will disappear when QGIS is closed. They are indicated in the Layer Panel by a small chipset icon: Let's take a look at how to save the final Dissolved layer, containing the 1km buffer zone around the subnetwork that can be reached in 1 day on foot. To do this, right-click on the layer in the Layer Panel and choose Export->Save features As... , or select the layer in the Layer Panel and go to Layer->Save As... in the main menu. We'll stick with the GeoJSON format. Click on [...] next to File Name to choose the location and name of the output file: name it tutorial_1_buffer_area and save it in the working directory. Ensure that the CRS is EPSG:3857. Also, you can safely deselect the fields type and start : they are artefacts from the previous processings. Finally, click on OK to create the file. The result should be automatically loaded into QGIS. You may now want to delete all the temporary layers created until now, as, anyway, they will not be saved. G. Composing a map of the accessible area from a place, in the Meilenbm\u00e4tter road network This last exercise will be carried out collectively during the session, in order to keep the tutorial to a reasonable length.","title":"1. Getting started with QGIS"},{"location":"tutorials/tutorial_1/text/#1-getting-started-with-qgis","text":"This tutorial is a step-by-step introduction to QGIS, from discovering the GUI to geospatial processing, through a series of practical exercises based on the geohistorical data leveraged in the DigiKAR project. A set of icons is used to highlight the nature of specific blocks or sections: \u26a0\ufe0f and \u2757 denote an important information; \u2139\ufe0f is used for optional info or details on a specific point. \ud83d\udee0\ufe0f marks the beginning of an \"exercise\". Now it's your turn! The icon is used to remind you to save the project to prevent data loss if QGIS crashes ! \u2757 LANGUAGE. All exercices have been written with QGIS in English. Going through the tutorial with QGIS in German should not be too difficult, as most features have a distinctive icon image. However, if you installed QGIS in German and wish to temporarily switch to English, once you have run QGIS open the menu Settings->Options->Locale , check Override system locale and set to \ud83c\uddfa\ud83c\uddf8 American English . QGIS must be restarted for changes to take effect. \u2757 REMINDERS Save your QGIS project regularly , the software might not be super stable on your computer, especially if your OS is Windows ! When editing vector data, don't forget to save the layer also regularly ! Be carefull with character encoding on Windows when loading geodata from local files, as the default encoding is usually not UTF-8 on this OS. Similar issues may or may not occur on MacOS... \u26a0\ufe0f DISCLAIMER . Some of the data and documents used in this tutorial are extracts from datasets created by other organizations that are not always available as open data. We therefore ask you not to distribute or publish the content of this tutorial. Lastly, apologies for all the frenchisms in the text \ud83d\ude42","title":"1. Getting started with QGIS"},{"location":"tutorials/tutorial_1/text/#a-preliminary-steps","text":"","title":"A. Preliminary steps"},{"location":"tutorials/tutorial_1/text/#a-setting-up-the-working-directory","text":"Create a new folder in the location of your choice to store the material and projects of the next tutorials. This folder will be your working directory. Download the data for this tutorial (~1.5Mb): https://www.swisstransfer.com/d/64cf26cf-2824-4ae0-9dbe-be09ff12a4f5 Extract the zip archive to your working directory.","title":"a. Setting up the working directory"},{"location":"tutorials/tutorial_1/text/#b-creating-a-new-qgis-project","text":"Before starting to experiment with the GUI, let's start by creating a project to hold all the data and configuration of the tutorials. On start-up, QGIS is initialized with an empty project, labelled Untilted Project . \ud83d\udee0\ufe0f Let's start by saving this new project on the hard disk with a better name; this will be the project for the rest of the hands-on session. From the QGIS top menu, go to Project->Save as , or press CTRL+Shift+S and save the project as main_project in your working directory (no need to set the file extension). The top banner of QGIS should now display main_project to indicate that this is the currently opened project. \u2139\ufe0f A project is a workspace, savec in .QGZ files. Projects store a large number of settings: customisation of the GUI, map projections, links to data sources, the list of loaded GIS layers with their symbolisation, input forms, and so on. However, it is important to note that a project file does not actually store any geospatial data , but only configurations and metadata. The actual data may be stored locally in separate files, or may come from remote servers on the Web. \u26a0\ufe0f Ensure the code EPSG:4326 apprears in the bottom-right corner of the QGIS footbar (see below). If not, please notify one of the session organisers before proceeding further.","title":"b. Creating a new QGIS project"},{"location":"tutorials/tutorial_1/text/#1-first-steps-in-qgis","text":"This is the interface you should be seeing now: The main GUI layout is composed of 3 types of visual components: Menus , which provide hierarchical access to QGIS functions, options and preferences; Panes , to display data in different ways, including the main map view. Toolbars , that are visual shortcuts to all features found in the menus. Let's discover these different visual elements through hands-on experience.","title":"1. First steps in QGIS"},{"location":"tutorials/tutorial_1/text/#a-loading-the-osm-basemap-with-a-qgis-plugin","text":"For the moment, the project is completely blank. Let's fix that by loading OpenStreetMap as our first data source! \u2139\ufe0f The volunteer geographic information project OpenStreetMap (OSM) creates multi-scale world maps from its open-data geodatabase, and publishes them on the Web for everyone and for free. QGIS has a plugin that makes it very easy to load OSM basemaps, however is not installed by default. \ud83d\udee0\ufe0f In the QGIS top menu, go to Plugins->Manage and Install Plugins... . It will open a window listing all the plugins available on the official plugins hub at https://plugins.qgis.org/. In the tab All , search for QuickMapServices and click on Install Plugin . Once installed, close the popup window. The QuickMapServices plugin is now accessible from the QGIS main menu, in Web->QuickMapServices . In QuickMapServices , select OSM->OSM Standard to load the standard OSM basemap into the project. \u2139\ufe0f QGIS comes with over 1,000 plugins for all kinds of uses, so feel free to explore https://plugins.qgis.org/ ! Please note that some plugins, although open-source, serve as access points to commercial APIs (e.g. MapTiler).","title":"a. Loading the OSM basemap with a QGIS Plugin"},{"location":"tutorials/tutorial_1/text/#b-navigating-in-the-map","text":"In QuickMapServices , click OSM->OSM Standard to load the default OpenStreetMap basemap into QGIS. \u2139\ufe0f The map may not have the same shape as in the figure above; it depends on the default cartographic projection used in your QGIS. Let's explore some of the most important components of the QGIS GUI: the map navigation tools (1), the map view (2), and the Layers pane (3). The Map navigation tools (1) take up a small part of the QGIS toolbar, usually in the top left. They are used to navigate within the map view (2) in various ways. \u2139\ufe0f Feel free to hover your mouse over the different tools to display their tooltips! Most QGIS map tools work in a similar way. Clicking on a tool activates it, wich often makes the mouse cursor to change accordingly. The tool can then be used on the map view (2). In some cases, clicking on the tool icon immediately triggers an action, such as Zoom Full , which zooms to the extent of all currently mapped data. Note that the OSM basemap also appears in the Layers (3) pane. If you uncheck the box next to OSM Standard , it will hide that layer in the map view. \ud83d\udee0\ufe0f Use the Pan and Zoom tools on the map view (2) to roughly position yourself over Saxony. :info: With the Zoom tool, you can draw a rectangle on the map to easily zoom to a specific area. \u2139\ufe0f You can set the map view to a specific scale by editing the Scale value in the QGIS footbar. For instance, set the scale to 1:500,000. Now it's time to save the project state. Go to the Project->Save menu, press CTRL+S , or use the floppy disk tool . Saving the QGIS project stores the scale and position of the view, so every time you reopen the project, you will be in the same place.","title":"b. Navigating in the map"},{"location":"tutorials/tutorial_1/text/#c-map-projections-and-coordinate-reference-systems","text":"Perhaps have you noticed that the OSM Standard basemap appears stretched in the East-West direction. This is due to the cartographic projection used in the map view of the project. Let's take a moment to delve into this topic.","title":"C. Map projections and coordinate reference systems"},{"location":"tutorials/tutorial_1/text/#a-map-projections","text":"Map projections try to portray the surface of the earth, or a portion of the earth, on a flat piece of paper or computer screen. In layman\u2019s term, map projections try to transform the earth from its spherical shape (3D) to a planar shape (2D). https://docs.qgis.org/3.28/en/docs/gentle_gis_introduction/coordinate_reference_systems.html Like any GIS, QGIS displays data on a map that is geolocated on the Earth's surface using coordinates. For example, the OSM Standard basemap provided by OpenStreetMap is made of thousand of small tiles, each one associated with geographic coordinates. You can easily observe this by moving the mouse cursor over the map view while looking at the status bar. You will notice that the cursor position is displayed in the Coordinate section as latitude and longitude: Indeed, latitude and longitude are positions on the surface of a spherical or ellipsoidal model of the Earth. However, QGIS is made for 2 dimensional cartography and is unable to show a 3D representation of the Earth. Map projections are mathematical transformations that \"unfold\" the Earth's surface onto a flat plane while preserving some geometric properties of the terrain, either distances, angles, or shapes. However, this process is not without consequences, similar to trying to flatten the skin of an orange without cutting it into pieces. Flattening a sphere can only be done at the expense of distortions, and map projections cannot simultaneously preserve distances, angles, and areas all together. For more information about map projections, see https://gisgeography.com/map-projections/ Numerous map projections are available in QGIS, each with its own geometric properties, pros and cons, area of use, etc. Choosing a projection depends on the purpose of the map, its scale, the area to cartography and the use case. However, the Robinson and Mercator projections are dominant nowadays for small scale cartography (i.e. large areas). Mercator is typically used for world maps. Webmapping applications most often use a simplified version of this projection, called Pseudo-Mercator because it relies on a spherical model of the Earth instead of an ellipsoidal one.. In the current project, QGIS is using a cartographic projection named ** Equirectangular or Plate-Carr\u00e9e** to display the Earth sphere on a 2 dimensional plane. You can play around with the demo below https://www.jasondavies.com/maps/transition/ to see how different cartographic projections distort the shape of the Earth. Choose Equirectangular (Plate-Carr\u00e9e) in the demo to visualize the projection currently used by QGIS. As you may notice in the demo or on the map displayed in QGIS, the higher the latitude the more horizontally stretched is the map. Indeed, the Plate-Carr\u00e9e projection is not suited for Europe and even less for a \"relatively\" small area like Germany/Saxony. However, there are other projections available, integrated into what is known as Coordinate Reference Systems (CRS).","title":"a. Map projections"},{"location":"tutorials/tutorial_1/text/#b-coordinate-reference-systems","text":"\ud83d\udee0\ufe0f Notice the code EPSG:4326 in the bottom right of the footbar of QGIS: Click on this code to open the CRS tab in the project properties. Let's take a closer look at points (1) and (2) from the figure above. In (1), we can see that the code EPSG:4326 displayed in QGIS is the identifier of the Coordinate Reference System (CRS) named WGS 84 . We have seen that map projections exist to display a portion of the surface of the 3D Earth's sphere onto a 2D plane. A Coordinate Reference System is a structured set of parameters that define, in a standardized framework, how to convert geographic coordinates on the Earth's surface (latitude/longitude) to 2D coordinates on a plane using a specific geometric transformation, i.e. a map projection. \u2139\ufe0f There are thousands of standardized CRS, which can be explored on https://epsg.io/ . Each CRS is tailored to a specific scale, region of the world, accuracy, and usage. It is possible to create custom CRS in QGIS, but that is beyond the scope of this tutorial. Here is a very nice demo to compare different cartographic projections: https://observablehq.com/@d3/projection-comparison Let's quickly examine the CRS WGS 84 / Pseudo-Mercator . To do this, search for this CRS using the field Filter and select it (you can write the name or the identifier EPSG:3857 ). In (2), take a look at the WKT property, which provides the structured definition of this CRS. Here are the main elements of this CRS: ------------------------------------------------------------ BLOCK #0 : DEFINITION ------------------------------------------------------------ PROJCRS[\"WGS 84 / Pseudo-Mercator\", ------------------------------------------------------------ BLOCK #1 : BASEGEOGCRS ------------------------------------------------------------ BASEGEOGCRS[\"WGS 84\", ENSEMBLE[\"World Geodetic System 1984 ensemble\", ... ELLIPSOID[\"WGS 84\",6378137,298.257223563, LENGTHUNIT[\"metre\",1]], ENSEMBLEACCURACY[2.0]], PRIMEM[\"Greenwich\",0, ANGLEUNIT[\"degree\",0.0174532925199433]], ID[\"EPSG\",4326]], ------------------------------------------------------------ BLOCK #2 : MAP PROJECTION ------------------------------------------------------------ CONVERSION[\"Popular Visualisation Pseudo-Mercator\", ID[\"EPSG\",1024]], PARAMETER[\"Latitude of natural origin\",0, ANGLEUNIT[\"degree\",0.0174532925199433], ID[\"EPSG\",8801]], PARAMETER[\"Longitude of natural origin\",0, ANGLEUNIT[\"degree\",0.0174532925199433], ID[\"EPSG\",8802]], PARAMETER[\"False easting\",0, LENGTHUNIT[\"metre\",1], ID[\"EPSG\",8806]], PARAMETER[\"False northing\",0, LENGTHUNIT[\"metre\",1], ID[\"EPSG\",8807]]], CS[Cartesian,2], AXIS[\"easting (X)\",east, ORDER[1], LENGTHUNIT[\"metre\",1]], AXIS[\"northing (Y)\",north, ORDER[2], LENGTHUNIT[\"metre\",1]], ------------------------------------------------------------ BLOCK #3 : USAGE DOCUMENTATION ------------------------------------------------------------ USAGE[ SCOPE[\"Web mapping and visualisation.\"], AREA[\"World between 85.06\u00b0S and 85.06\u00b0N.\"], BBOX[-85.06,-180,85.06,180]], ID[\"EPSG\",3857]] Without going much details, let's simply observe: Block #0: This is a PROJ[ected]CRS , meaning it is a CRS with a cartographic projection. With this CRS, the coordinates are in 2 dimensions on a plane! On the other hand, GEOG[raphic]CRS , such as the previous WGS 84 (EPSG:4326), do not carry a map projection; Corodinates in such CRSs are expressed in latitude and longitude. Block #1: This CRS is based on a 3D model of the Earth defined in the CRS WGS 84 (EPSG:4326), which contains an ellipsoidal approximation of the true shape of the Earth. Block #2: This CRS projects the geographic coordinates on a plane using a mathematical transformation. The parameters for this transformation are described in this block. Block #3: Lastly, Block #3 describes the extent to which this CRS is valid, ensuring it is not too imprecise for a particular region of the Earth. \u2139\ufe0f When using a GEOGCRS like WGS 84 (EPSG:4326), QGIS arbitrarily uses an Equirectangular projection when such a CRS is used. This is why, at start, QGIS showed geographic coordinates and displayed a very stretched OSM map. \u2139\ufe0f Nowadays, the most commonly used geographic CRS is the international CRS WGS 84 because the GPS system is built upon it. However, other geographic CRS have been created for specific regions of the world. For instance, ETRF89 (EPSG:9059) is the standard geographic CRS for Europe. For most applications in this region, the differences between WGS 84 and ETRF89 can be considered negligible, except for high-precision applications. All official European PROJCRSs rely on ETRF89 and the transformation between WGS 84 and ETRF89 is shipped with all modern GIS. \u2139\ufe0f The Well Known Text (WKT) format for CRS, which is also used to represent vector geometries, is described in the standard https://docs.ogc.org/is/18-010r7/18-010r7.html#108","title":"b. Coordinate Reference Systems"},{"location":"tutorials/tutorial_1/text/#c-on-the-fly-projection-in-qgis","text":"In the CRS window make sure you th the CRS EPSG:3857 is selected and click OK . Observe how the overall shape of the map is completely different now: Take a look at the Coordinate field in the footbar: it no longer displays geographic coordinates in degrees, but rather 2D Cartesian coordinates! These coordinates are in the 2D reference system of the projected CRS Pseudo-Mercator (EPSG:3857), which uses the Mercator map projection. With a different projected CRS, we would have a different 2D reference system and thus different coordinates. We can see that QGIS has dynamically projected the OpenStreetMap map to the EPSG:3857 CRS. This is known as on-the-fly projection , a tremendously useful feature which allows to load geographic data with coordinates in various CRSs and to display them in a single coordinate system. This illustrates an key property of geographic data: each source of geographic data has its own CRS . The GIS software dynamically reprojects the data to a unified CRS, but it does not modify the CRS of the data itself . Here, QGIS has never actually altered the coordinates of the OSM basemap, the images are simple reprojected before being displayed on the map view. This implies that two data layers can overlay in the map view, while actually being in very different coordinate reference systems. This is often misleading to new GIS enthusiasts and may lead to unexpected results in spatial analysis and processing. QGIS is mostly able to perform calculations on vector data in different CRSs without any trouble, but some operations on rasters (or vector+rasters) still require the CRS of all input data to be the same. A good practice is to ensure that all the data being processed is in the same CRS to avoid any issue. Later in the tutorial, we will see how to truly change the CRS of a data layer, rather than just reprojecting it in the QGIS map view. Don't forget to save the project !","title":"c. On-the-fly projection in QGIS"},{"location":"tutorials/tutorial_1/text/#d-adding-more-geodata","text":"Now that we have covered the basics of the QGIS interface and map projections, let's load some more data into QGIS.","title":"D. Adding more geodata"},{"location":"tutorials/tutorial_1/text/#a-adding-the-meilenbmatter-von-sachsen-from-a-remote-web-map-service","text":"Web Map Service (WMS) is a standard protocol published by the Open Geospatial Consortium for delivering georeferenced maps over the web as data streams. With WMS, you can share and load georeferenced map images that would largely exceed the capabilities of mainstream computers. The Hochschule f\u00fcr Technik und Wirtschaft Dresden has published as a WMS the largest historical map of Saxony made from high resolution digisations of the ~300 Meilenbl\u00e4tter von Sachsen . \ud83d\udee0\ufe0f Let's load this map into QGIS. We first need to configure the connection to the HTW-Dresden WMS server. To do this, go to the Layer -> Data Source Manager menu, then select the WMS/WMTS tab, and click on New to add a new WMS source: Then enter the connection details for the server at the URL below, and click OK: Here is the servers' URL to copy-paste: https://geoinformatik.htw-dresden.de/ms/mbl The WMS server should now be available in the WMS/WMTS panel. All you need to do now is click Connect to display the list of available maps. As shown in the figure below, select the layer number 5 named Meilenblatt_V (1), then click Add (3). Check that the coordinate reference system selected for this layer is indeed EPSG:3857 (2). Et voil\u00e0 ! The georeferenced map of Meilenbl\u00e4tter should now show on top of the OpenStreetMap basemap in the main map view ! \u2139\ufe0f If the Meilenbl\u00e4tter layer appear in the Layers panel but is not visible on the map view, you can force QGIS to zoom to the layer. Select the layer Meilenbl\u00e4tter in the Layers panel, then clicking the map tool Zoom to Layer in the QGIS main toolbar. \u2139\ufe0f The arrangement of the layers in the Layers panel reflects the order in which they are displayed in the map view, in descending order. Therefore, one layer below another in the layers panel is also displayed below the other in the map view. You can change this order very easily by moving the layers with a simple drag and drop in the Layers panel. Don't forget to save the project !","title":"a. Adding the Meilenbm\u00e4tter von Sachsen from a remote Web Map Service"},{"location":"tutorials/tutorial_1/text/#b-loading-the-places-from-the-historisches-ortsverzeichnis-von-sachsen-from-a-csv","text":"We have so far only used georeferenced images. This kind of geographic data is referred to as raster data , i.e. they are made of a multi-dimensional matrix of pixels. The geographical entities they portray are not structured as digital data but that could be queried, processed, enriched with attributes,... At the other end of the geographic data spectrum, vector data are structured digital entities composed of a set of attributes and a discrete geometry shape (a point, polyline, polygon, etc.). In simple terms, we could say that vector geospatial data is a single row in an Excel-type table, with a column containing its coordinates. Broadly speaking, a vector data is a line in an Excel spreadsheet, with a special column containing it geometry, and raster data are images with geographical coordinates. In fact, QGIS can actually process an Excel spreadsheet as if it were a set of vector data. \ud83d\udee0\ufe0f Let's try this with the file Tutorial_1/data/hov_places.csv . The extension .csv is short for Comma Separated Values, a very simple text-based datatable format where cells are separated by a special character. CSV are typically created from spreadsheet programs such as Excel or LibreOffice Calc. \u2139\ufe0f If you open this file in Open/LibreOffice Calc or Excel (in Excel you may have to go to the tab Data and select from text ), or in any other text editor, you will see that each line corresponds to a named place and that it contains two columns named lon[gitute] and lat[itude] containing the point coordinates of this place. To load this file into QGIS, go to the menu Layer->Data Source Manager and follow these steps: 1. Open the tab Delimited Text 2. Click on the button to the right of File Name to fetch and parse the content of Tutorial_1/data/hov_orte.csv . 3. \u26a0\ufe0f Check that the encoding is UTF-8 (especially on Windows and MacOS!) and the File Format set to CSV 4. Tell QGIS where to find the geometry of each place in Geometry Definition : - \"Point coordinates\" means that geometries are simple points whose coordinates are in separate columns. Here, the X field (i.e. \"east/west\") is the column lon and the Y field is the column lat . - Set the Geometry CRS. Be careful, the table contains geographic coordinates, not projected ones, so the CRS is EPSG:4326 (WGS 84) and not EPSG:3857. On-the-fly projection will display everything in Pseudo-mercator anyway. 5. Click \"Add\" and then \"Close\" The result should resemble the figure below (colours may vary): QGIS maps only the positions of the HOV loaded from the CSV, however the whole data table has been imported with much more information, like the place name, suface and so on. Let's confirm that all the data has indeed been loaded by looking at the layer's attribute table , which contains all the non-geometric attributes of the HOV places. Right-click (on MacOS: Command + click) on the layer hov_places in the Layers pane, and select Open Attribute Table . The attribute table can be used to add or delete fields from a vector layer, to edit field values, to calculate new fields from complex expressions... \u2139\ufe0f The attribute table will not be explained any further in this tutorial, but if you want to delve deeper into this subject, QGIS has a very comprehensive tutorial available at https://docs.qgis.org/3.28/en/docs/user_manual/working_with_vector/attribute_table.html Don't forget to save the project !","title":"b. Loading the places from the Historisches Ortsverzeichnis von Sachsen from a CSV"},{"location":"tutorials/tutorial_1/text/#b-loading-a-subset-of-the-road-network-in-the-meilenblatter-in-vector-format","text":"We have seen an example of point data loaded from a CSV data table, but many more formats exist, that have been specially designed for geospatial data. One of the most common formats is GeoJSON, wich is the standard for Web REST APIs and is widely used to publish and share vector geospatial data. \ud83d\udee0\ufe0f In the Tutorial_1/data/ folder is a file called road_network.geojson . It contains a piece of the road network visible on the Meilenbl\u00e4tter, in vector format. Let's open it in QGIS. To do this, you have two options: 1. simply drag and drop the file to the QGIS map view. \u26a0\ufe0f On Windows and MacOS it is safer to use method 2 to prevent QGIS to automatically chose the encoding based on the Locale, wich might not be UTF-8 on these two operating systems; 2. or go to Layer->Data Source Manager and open the file from the tab Vector . Here, specify the encoding to be UTF-8. The layer should be added to the map and visible to the North of Zwickau: \u2139\ufe0f Of the 4 layers opened, 2 are stored in the cloud (OSM and the Meilenbl\u00e4tter), and 2 were imported from local files. Because the reference to the layer sources (WMS URLs or file paths) are saved in the project file, all layers will be loaded automatically. However, the data is never actually stored in the project file , but is simply loaded when the project is opened. So, if you want to copy your QGIS to another computer, or create a nackup, do not forget to copy the data files along with the QGIS project file . Don't forget to save the project !","title":"b. Loading a subset of the road network in the Meilenbl\u00e4tter, in vector format"},{"location":"tutorials/tutorial_1/text/#e-playing-with-symbology","text":"Both vector layers loaded are displayed on the map with an automatically generated style, usually quite ugly and not relevant. This is an opportunity to experiment a little with the QGIS map symbolisation engine.","title":"E. Playing with symbology"},{"location":"tutorials/tutorial_1/text/#a-displaying-hov-places-with-their-names","text":"Let's start with the hov_places layer. We have already seen that each point is associated with a set of attributes that do not appear on the map, but are accessible from the layer's attribute table . \ud83d\udee0\ufe0f One of these attribute is the place's name, stored in the field/column Ortsname . Let's display it on the map, to make browsing easier! Everything related to the symbolization of a layer is available in the Layer properties which can be opened either by right-clicking on the layer in the Layers Pane and choosing the Properties... option, or from the Layer->Layer Properties menu. This will open a window with a number of tabs. Choose the Labels tab (1, see below) and specify in (2) that you want to display Single Labels : This will unlock all the labeling options for the hov_places layer: First, select the data field to be used as the label (1): Ortsname . Using the various tabs in the panel (2), create the labels: in Arial font, bold, size 3.5 millimetres surrounded by a 1 millimetre white buffer placed around the point at a distance of 0.5 millimetres whose visibility depends on the scale, and which are hidden beyond 1:300,000. Bonus excercise Use the expression builder in data-defined Override -> Edit (see fig. below) to toggle the scale-dependant visibility only for places with Flaeche_in_ha_integer less than 1000 ha. The result should look like this:","title":"a. Displaying HOV places with their names"},{"location":"tutorials/tutorial_1/text/#b-categorized-symbols-on-the-road-network","text":"Let's now consider the layer road_network . Looking at its attribute table, we see that it contains a field named category , which is the nature of this road according to the legend of the Meilenbl\u00e4tter: \ud83d\udee0\ufe0f Let's create a different symbology for each category of road. Open the properties of the road_network layer, then the Symbology tab and choose a Categorized symbology. Apply this categorisation to the category field and click Classify once to generate a legend line for each category: Click on Apply to see the results of this first rough automatic styling. You can now finely adjust the symbolisation of each category by selecting each line of legend, and then clicking on Symbol to open the Symbol Selector window. Create a specific style for the Strasse category. Let's recreate the style of the roads depicted on the Meilenbl\u00e4tter in the area covered by the vector network The symbol is a double red line, one side solid and the other dashed, with an orange background. To do this, in the Symbol Selector window in the Strasse category, you can stack strokes symbols and use the offset parameter to create different borders. For example: A solid Simple Line of width 1.5 mm, coloured in semi-transparent orange... ...overlayed by a second Simple Line , dashed, of width 0.5mm, with an offset of 0.8mm. ...overlayed by a third Simple Line , solid, also of width 0.5mm, with an offset of -0.8mm. Once you're done, click on OK and then Apply to see the result: \u2139\ufe0f Unlike OK , the Apply button does not close the Symbolization window, wich makes super easy to experiment with the symbology in a trial&error approach ! The roads should now be displayed in the style of the Meilenbl\u00e4tter : Using on the legend of the Meilenbl\u00e4tter, create a symbol for each remaining road category that resemble the actual symbolisation on the historical map. In the case of StadtStrasse , wich is not in part of the above legend, simply set a thin black line ! Don't forget to save the project !","title":"b. Categorized symbols on the road network"},{"location":"tutorials/tutorial_1/text/#f-geospatial-processing-mapping-a-one-day-walking-trip-in-the-meilenblatter","text":"Now that all the data layers have been loaded, it is time to experiment with some of the the geospatial processing capabilities of QGIS. In this section, we're going to compute and map the area that could be covered by an individual travelling on foot on the road network depicted in the Meilenbl\u00e4tter. \u2757 Obviously, this is only a learning exercise with no scientific ambition. In order for the result to be more realistic, much more information would be needed: the full fine-grained raod network (footpaths are missing, the network storps at the map limits, ...), the DEM to determine the elevation of each road, and so on. Let's proceed in several steps that build on each other.","title":"F. Geospatial processing: mapping a one-day walking trip in the Meilenbl\u00e4tter"},{"location":"tutorials/tutorial_1/text/#a-step-1-computing-the-network-accessibility-from-a-given-point","text":"Firstly, we need to know which part of the road network can be reached from a given starting point in a given time. QGIS offers a large number of processing options, accessible from the processing->Toolbox menu. The one we're interested in is Service Area (from point) available in the category Network Analysis . Double-click on the processing to open its settings window. \u2139\ufe0f For more details about the Network Analysis tools, check the doc : https://docs.qgis.org/3.28/en/docs/user_manual/processing_algs/qgis/networkanalysis.html Let's take a closer look at the prameters required by the Service Area processing: Obviously, we need a navigable network for routing calculation to be possible. Lucky for us, this is the case for road_network \ud83d\ude42 Select this layer in the Vector layer representing network field. Path type to calculate takes two possible values, depending on whether the service area is based on a distance or time budget. With Shortest , we look for the portion of the network that can be reached within a certain distance. Conversely, Fastest determines the subnetwork reachable in a given time. Fastest is the relevant value for us, switch the path type value accordingly. Let's skip Start point for now. Travel cost is the available time budget in hours . Set a plausible value for a full day of walk, say 7 hours . In Advanced Parameters we need to set a value for the Default Speed . Set it to 4 km/h . We're almost done ! Let's now chose the the starting point of the trip. Click on the [...] button to the right of Start Point to activate a coordinate picker. Click on the map to define this position as the starting point. Be careful to chose a location close to the network . \u2139\ufe0f Right click anywhere to deactivate the coordinate picker and go back to the processing window. The final processing configuration should be similar to the figure below. Now all you have to do is hit Run ! A new layer named Service area (lines) should have been added to the project: this is the sub-network that can be reached in 7 hours by walking at 4 kilometers/hour from your chosen starting point. For example, here's the part of the network accessible from Schlunzig :","title":"a. Step #1:  Computing the network accessibility from a given point"},{"location":"tutorials/tutorial_1/text/#b-step-2-creation-of-an-approximate-accessible-area","text":"Now that we know which roads are accessible from the chosen starting point, we can construct an approximate polygon of the area that can be covered in a day's walk. Let's say that once a point in the network has been reached, a traveler can still cover around 1 kilometer as the crow flies to reach his final destination. A rough but very simple way of representing this area is to create a buffer zone around the accessible road segments. However, linear network geometries are too complex for buffer zone calculation to be successful on a laptop. We need to pre-process the Service Area layer to simplify the road geometries. This pre-processing involves several steps: 1. the network visible in the Service Area layer is in fact a single entity with a complex geometry. This can be verified by using the geometry selection tool ![[icon_select.png]] in the QGIS toolbar, then clicking on a network line in the map view. The selected entity is displayed in yellow: you can see that the entire network turns yellow. The first thing we want to do is explode this network into smaller entities corresponding to road sections. To do this, go to Vector->Geoprocessing Tools-> Dissolve , check the option keep disjoint features separate and apply the operation on the layer Service Area . This will create a new temporary layer Dissolved made of mutliple road segments (you can check with the selection tool ![[icon_select.png]]). 2. Now we can simplify the segments geometries. Go to Vector->Geometry Tools-> Simplify and apply a Douglas-Peucker algorithm on the layer Dissolved with a tolerance of 500 meters. This will create a third temporary layer names Simplified . Check on the map view how the new segments have a lesser number of intermediary nodes. We can now safely create the buffer area from the simplified road network. Open the Buffer processing from the Vector->Geoprocessing tools menu and configure the algorithm as such: Run the processing to generate a layer Buffered containing the buffer of 1 kilometer around each road. This layer contain multiple polygons, but we actually want a single polygonal area. The ultimate step is to merge all these buffers into one single entity, using the processing Vector->Geoprocessing Tools-> Dissolve again on the temporary layer Buffered to create the final area:","title":"b. Step #2:  Creation of an approximate accessible area."},{"location":"tutorials/tutorial_1/text/#c-step-3-saving-the-final-buffer-area-to-a-file","text":"So far, we've been able to generate temporary files, stored in memory. These will disappear when QGIS is closed. They are indicated in the Layer Panel by a small chipset icon: Let's take a look at how to save the final Dissolved layer, containing the 1km buffer zone around the subnetwork that can be reached in 1 day on foot. To do this, right-click on the layer in the Layer Panel and choose Export->Save features As... , or select the layer in the Layer Panel and go to Layer->Save As... in the main menu. We'll stick with the GeoJSON format. Click on [...] next to File Name to choose the location and name of the output file: name it tutorial_1_buffer_area and save it in the working directory. Ensure that the CRS is EPSG:3857. Also, you can safely deselect the fields type and start : they are artefacts from the previous processings. Finally, click on OK to create the file. The result should be automatically loaded into QGIS. You may now want to delete all the temporary layers created until now, as, anyway, they will not be saved.","title":"c. Step #3: Saving the final buffer area to a file"},{"location":"tutorials/tutorial_1/text/#g-composing-a-map-of-the-accessible-area-from-a-place-in-the-meilenbmatter-road-network","text":"This last exercise will be carried out collectively during the session, in order to keep the tutorial to a reasonable length.","title":"G. Composing a map of the accessible area from a place, in the Meilenbm\u00e4tter road network"},{"location":"tutorials/tutorial_2/text/","text":"2. Georefencing historical maps A. Preliminary steps Download the data for this tutorial (\u26a0\ufe0f~1.6Gb): https://www.swisstransfer.com/d/d9b7b3c8-8c4a-4b7d-b988-acd20da73d69 Extract the zip archive to your working directory. Open the preconfigured QGIS project Tutorial_2/project.QGZ Select a MeilenBlatt to georeference in the list available in the layer georeferencing_index . Each participant should chose a different sheet . In QGIS, enable automatic snapping from Project->Snapping options... . Toggle and keep the default options: This will make the cursor automatically snap to the closest vertex in the vector layers during coordinate capture. B. Fast interactive georeferencing \ud83d\udee0\ufe0f Install the \"Freehand raster georeferencer\" plugin. After installing the plugin, a set of tools will appear in the QGIS toolbar: Click on and open the Meilenblatt that you have chosen. Use the tools MO[ve] , RO[tate] , SC[ale] and 2P (2 points transform) to roughly fit the sheet in its corresponding cell in the grid. You can also try to approximately match the places in the sheet with the point places in the vector layer hov_places . Once you are satisfied with the result, click on and save it to a file named d_{sheet_number}_georeferenced_fast.png in the folder Tutorial_2/output . Open the Tutorial_2/output directory using your computer's file browser. You will notice that the georeferenced file is accompanied by a .pgw file. This simple text file is known as a World File , which contains the parameters for the rigid geometric transformation used by the GIS to display the PNG image within a specific coordinate reference system. You can open this file with a text editor and refer to the description of the WorldFile format on Wikipedia to see what information is required to display a georeferenced image.\" \u2139\ufe0f When copying/moving a georeferenced image that has a companion World File, make sure to also copy or move the world file along with it! \u2139\ufe0fHere, the georeferenced PNG has not been distorted during the georeferencing process. The output PNG is identical to the original image, and all the georeferencing information is stored in the World File. This is possible because the Freehand georeferencer only performs linear transforms. However, with more advanced georeferencing techniques, the original image often needs to be locally distorted. In such cases, the resulting georeferenced image differs from the original one. C. Georeferencing with ground control points: the grid technique a. Introduction The freehand raster georeferencer is an incredibly valuable tool for quick and approximate georeferencing. However, its effectiveness is often limited when precise georeferencing is required. Historical maps typically have poor planimetric accuracy. Aligning them with a reference map, such as OpenStreetMap, often involves distorting the historical maps to ensure their content aligns with the reference. This distortion is necessary to achieve a proper match between the two maps. Linear transformations are generally not sufficient for historical maps. Non-linear methods such as polynomial transformations or thin plate splines need to be employed to achieve more accurate and precise results. Such methods require a set of ground control points (GCP) . The idea behind GCPs is to establish a correspondence between a pixel position in the source image and a geographic or projected position in an coordinate reference system. Thus, a GCP is a pair of points that are typically placed on the depiction of the same geographic entity both in the image and on a reference map already in a geo/projected CRS like, for instance, the OpenStreetMap basemap. These entities can be anything, depending on the image to process: buildings, natural objects, roads, ... Unfortunately, the landscapes depicted in historical maps often no longer exist, making it challenging to find suitable GCPs. Furthermore, when dealing with maps composed of multiple sheets, such as the Meilenbl\u00e4tter , placing GCPs solely on geographic entities does not provide control over how adjacent sheets should be stitched together. In other words, the original grid structure of the sheet is not preserved during the georeferencing process. In so\u00f9me cases, maps like the Meilenbl\u00e4tter include a cartographic grid with well-documented parameters such as its resolution, dimensions, and orientation, which allows for its reconstruction in the geographic reference system. A common and effective approach is to define GCPs on this reconstructed grid. This approach ensures that the georeferenced sheets align correctly with each other. It also helps prevent interpretation errors regarding the correspondence between GCPs placed on different geographic entities. This method provides a robust solution while maintaining accuracy during the georeferencing process. b. GCP-based georeferencing on the Meilenbl\u00e4tter grid \ud83d\udee0\ufe0f Open the QGIS georeferencer from the menu Layer->Georeferencer . Click on to load the the original, non-georeferenced Meilenblatt . Use the Add Point tool to define GCPs on each corner of the sheet, both in the image view and the map view, using the recreated grid georeferencing_index . Save the GCPs in Tutorial_2/output/d_{sheet_number}.png.points using (or from File->Save GCP Points as... ) Next, click on Transformation Settings to access the settings for the transformation. Here, you can specify the type of transformation method to be applied and the target Coordinate Reference System (CRS), among other options. To ensure the corners of the image match precisely, select \"Thin Plate Spline\" as the transform type and set the target CRS to EPSG:3398 (RD/83 / 3-degree Gauss-Kruger zone 4) . Save the georeferenced image as Tutorial_2/output/d_{sheet_number}_georeferenced_grid.tif and keep the resampling method unchanged: Click OK to confirm the settings and initiate the georeferencing process by clicking the button ! . The georeferenced sheet should then be automatically loaded into the project. Click OK and run the georefencing with the button . The georeferenced sheet should be automatically loaded into the project. Notice how the georeferenced sheet does not align well with the HOV places or the OSM basemap. This is the result of two factors: the imperfect accuracy of the grid and the inherent spatial inaccuracies within the Meilenbl\u00e4tter . To achieve a more accurate georeferencing of the map content, we need to locally warp it. This can be accomplished by adding GCPs directly onto the geographic entities depicted in the map. D. Georeferencing with ground control points: GCPs on persistent entities Because setting GCPs only on entities would cause mismatches between adjacent sheets, we want to retain the GPCs put on the grid corners increase the number of control points. This time we will use the OSM basemap as the reference. \ud83d\udee0\ufe0f Open the georeferencer and load the original sheet image once again. Import the grid GCPs that were previously defined using the button . Look for entities that are depicted both in the OSM reference map and in the sheet, i.e. entities in the Meilenblatt that still exist today. The best candidates for GCPs are churches since they were commonly used as reference points during the topographic survey of the Meilenbl\u00e4tter . \u2139\ufe0f There is no golden rule on the placement strategy for GCPs as it varies depending on the specific map being processed. However, there are some best practices that can help achieve higher-quality georeferencing: - The more GCPs, the better, but it's preferable to have a few reliable points rather than many questionable ones. - Aim to cover the entire sheet with GCPs. Since the geometric transformation relies solely on the information provided by the GCPs, it's best to avoid leaving large areas of the sheet empty of GCPs to prevent dramatic distortions in those areas. - Tall and compact structures such as churches, bell towers, and castles are excellent candidates for GCPs. They were often used as triangulation points during the topographic survey of historical maps, making their positions on the map more accurate and reliable compared to features like roads or mountain summits. Figure: The same church depicted in a Meilenblatt and on OSM. The point is the location of that place regirstered in the HOV. Once you have added a reasonable number of control points, run a new georefenrencing using the same transformation as before. Save the georeferenced image as Tutorial_2/output/d_{sheet_number}_georeferenced_dense.tif . \u2139\ufe0f Feel free to run intermediate georeferencings. Working incrementally and adding/adjusting GCPs along the way helps maintain control over their quality and improves the final outcome. Finally, save the GCPs as Tutorial_2/output/d_{sheet_number}_dense_.png.points . Compare the three different georeferencings visually and observe the effects of the warping on the resulting map, particularly on the edges of the sheet. E. Clipping the georeferenced raster You've certainly noticed that the sheet is framed by a black border that contains no cartographic information and that overlaps with adjacent sheets It would be better to remove this border and clip the georeferenced raster so that it fits into its corresponding grid tile. The vector grids grid_sheets and georeferencing_index have been designed so that each tile is a polygon. We're going to reuse the tile polygone as a mask shape to clip the georeferenced sheet. First, we need to isolate the tile corresponding to the sheet into a separate layer. Hide the georeferenced sheet by unchecking it in the Layer Pane si the the tile in georeferencing_index becomes visible. Select this layer in the Layer Pane, then with the map tool entity selection click on the tile to select it. Hit CRTL+C or go to Edit->Copy entities to copy the selected tile polygon. Then, go to Edit->Paste entitie as...-> New Vector Layer to paste the polygon to a new layer and save it as a GeoJSON file to Tutorial 2/output/mask.geosjon . The resulting layer, containing only the copy-pasted tile, should be automatically loaded to QGIS as a new layer named mask . Now go to the menu Raster->Extraction->Clip vector layer by mask layer and configure clipping as below. Don't forget to check \"Create an output alpha band\" so that clipped borders are transparent. This will create a new georeferenced TIF file. Choose to save it as Tutorial 2/output/d_{sheet_number}_georeferenced_clipped.tif , and click Run . The final map, georeferenced and without black borders, should now be displayed in QGIS: This ends the tutorial on georeferencing in QGIS ! Please do no delete the files d_{sheet_number}_georeferenced_clipped.tif and d_{sheet_number}_georeferenced_clipped.tif . We'll collect them at the end of the session to create a single georeferenced map based on everyone's contributions. Thank you !","title":"2. Georefencing historical maps"},{"location":"tutorials/tutorial_2/text/#2-georefencing-historical-maps","text":"","title":"2. Georefencing historical maps"},{"location":"tutorials/tutorial_2/text/#a-preliminary-steps","text":"Download the data for this tutorial (\u26a0\ufe0f~1.6Gb): https://www.swisstransfer.com/d/d9b7b3c8-8c4a-4b7d-b988-acd20da73d69 Extract the zip archive to your working directory. Open the preconfigured QGIS project Tutorial_2/project.QGZ Select a MeilenBlatt to georeference in the list available in the layer georeferencing_index . Each participant should chose a different sheet . In QGIS, enable automatic snapping from Project->Snapping options... . Toggle and keep the default options: This will make the cursor automatically snap to the closest vertex in the vector layers during coordinate capture.","title":"A. Preliminary steps"},{"location":"tutorials/tutorial_2/text/#b-fast-interactive-georeferencing","text":"\ud83d\udee0\ufe0f Install the \"Freehand raster georeferencer\" plugin. After installing the plugin, a set of tools will appear in the QGIS toolbar: Click on and open the Meilenblatt that you have chosen. Use the tools MO[ve] , RO[tate] , SC[ale] and 2P (2 points transform) to roughly fit the sheet in its corresponding cell in the grid. You can also try to approximately match the places in the sheet with the point places in the vector layer hov_places . Once you are satisfied with the result, click on and save it to a file named d_{sheet_number}_georeferenced_fast.png in the folder Tutorial_2/output . Open the Tutorial_2/output directory using your computer's file browser. You will notice that the georeferenced file is accompanied by a .pgw file. This simple text file is known as a World File , which contains the parameters for the rigid geometric transformation used by the GIS to display the PNG image within a specific coordinate reference system. You can open this file with a text editor and refer to the description of the WorldFile format on Wikipedia to see what information is required to display a georeferenced image.\" \u2139\ufe0f When copying/moving a georeferenced image that has a companion World File, make sure to also copy or move the world file along with it! \u2139\ufe0fHere, the georeferenced PNG has not been distorted during the georeferencing process. The output PNG is identical to the original image, and all the georeferencing information is stored in the World File. This is possible because the Freehand georeferencer only performs linear transforms. However, with more advanced georeferencing techniques, the original image often needs to be locally distorted. In such cases, the resulting georeferenced image differs from the original one.","title":"B. Fast interactive georeferencing"},{"location":"tutorials/tutorial_2/text/#c-georeferencing-with-ground-control-points-the-grid-technique","text":"","title":"C. Georeferencing with ground control points: the grid technique"},{"location":"tutorials/tutorial_2/text/#a-introduction","text":"The freehand raster georeferencer is an incredibly valuable tool for quick and approximate georeferencing. However, its effectiveness is often limited when precise georeferencing is required. Historical maps typically have poor planimetric accuracy. Aligning them with a reference map, such as OpenStreetMap, often involves distorting the historical maps to ensure their content aligns with the reference. This distortion is necessary to achieve a proper match between the two maps. Linear transformations are generally not sufficient for historical maps. Non-linear methods such as polynomial transformations or thin plate splines need to be employed to achieve more accurate and precise results. Such methods require a set of ground control points (GCP) . The idea behind GCPs is to establish a correspondence between a pixel position in the source image and a geographic or projected position in an coordinate reference system. Thus, a GCP is a pair of points that are typically placed on the depiction of the same geographic entity both in the image and on a reference map already in a geo/projected CRS like, for instance, the OpenStreetMap basemap. These entities can be anything, depending on the image to process: buildings, natural objects, roads, ... Unfortunately, the landscapes depicted in historical maps often no longer exist, making it challenging to find suitable GCPs. Furthermore, when dealing with maps composed of multiple sheets, such as the Meilenbl\u00e4tter , placing GCPs solely on geographic entities does not provide control over how adjacent sheets should be stitched together. In other words, the original grid structure of the sheet is not preserved during the georeferencing process. In so\u00f9me cases, maps like the Meilenbl\u00e4tter include a cartographic grid with well-documented parameters such as its resolution, dimensions, and orientation, which allows for its reconstruction in the geographic reference system. A common and effective approach is to define GCPs on this reconstructed grid. This approach ensures that the georeferenced sheets align correctly with each other. It also helps prevent interpretation errors regarding the correspondence between GCPs placed on different geographic entities. This method provides a robust solution while maintaining accuracy during the georeferencing process.","title":"a. Introduction"},{"location":"tutorials/tutorial_2/text/#b-gcp-based-georeferencing-on-the-meilenblatter-grid","text":"\ud83d\udee0\ufe0f Open the QGIS georeferencer from the menu Layer->Georeferencer . Click on to load the the original, non-georeferenced Meilenblatt . Use the Add Point tool to define GCPs on each corner of the sheet, both in the image view and the map view, using the recreated grid georeferencing_index . Save the GCPs in Tutorial_2/output/d_{sheet_number}.png.points using (or from File->Save GCP Points as... ) Next, click on Transformation Settings to access the settings for the transformation. Here, you can specify the type of transformation method to be applied and the target Coordinate Reference System (CRS), among other options. To ensure the corners of the image match precisely, select \"Thin Plate Spline\" as the transform type and set the target CRS to EPSG:3398 (RD/83 / 3-degree Gauss-Kruger zone 4) . Save the georeferenced image as Tutorial_2/output/d_{sheet_number}_georeferenced_grid.tif and keep the resampling method unchanged: Click OK to confirm the settings and initiate the georeferencing process by clicking the button ! . The georeferenced sheet should then be automatically loaded into the project. Click OK and run the georefencing with the button . The georeferenced sheet should be automatically loaded into the project. Notice how the georeferenced sheet does not align well with the HOV places or the OSM basemap. This is the result of two factors: the imperfect accuracy of the grid and the inherent spatial inaccuracies within the Meilenbl\u00e4tter . To achieve a more accurate georeferencing of the map content, we need to locally warp it. This can be accomplished by adding GCPs directly onto the geographic entities depicted in the map.","title":"b. GCP-based georeferencing on the Meilenbl\u00e4tter grid"},{"location":"tutorials/tutorial_2/text/#d-georeferencing-with-ground-control-points-gcps-on-persistent-entities","text":"Because setting GCPs only on entities would cause mismatches between adjacent sheets, we want to retain the GPCs put on the grid corners increase the number of control points. This time we will use the OSM basemap as the reference. \ud83d\udee0\ufe0f Open the georeferencer and load the original sheet image once again. Import the grid GCPs that were previously defined using the button . Look for entities that are depicted both in the OSM reference map and in the sheet, i.e. entities in the Meilenblatt that still exist today. The best candidates for GCPs are churches since they were commonly used as reference points during the topographic survey of the Meilenbl\u00e4tter . \u2139\ufe0f There is no golden rule on the placement strategy for GCPs as it varies depending on the specific map being processed. However, there are some best practices that can help achieve higher-quality georeferencing: - The more GCPs, the better, but it's preferable to have a few reliable points rather than many questionable ones. - Aim to cover the entire sheet with GCPs. Since the geometric transformation relies solely on the information provided by the GCPs, it's best to avoid leaving large areas of the sheet empty of GCPs to prevent dramatic distortions in those areas. - Tall and compact structures such as churches, bell towers, and castles are excellent candidates for GCPs. They were often used as triangulation points during the topographic survey of historical maps, making their positions on the map more accurate and reliable compared to features like roads or mountain summits. Figure: The same church depicted in a Meilenblatt and on OSM. The point is the location of that place regirstered in the HOV. Once you have added a reasonable number of control points, run a new georefenrencing using the same transformation as before. Save the georeferenced image as Tutorial_2/output/d_{sheet_number}_georeferenced_dense.tif . \u2139\ufe0f Feel free to run intermediate georeferencings. Working incrementally and adding/adjusting GCPs along the way helps maintain control over their quality and improves the final outcome. Finally, save the GCPs as Tutorial_2/output/d_{sheet_number}_dense_.png.points . Compare the three different georeferencings visually and observe the effects of the warping on the resulting map, particularly on the edges of the sheet.","title":"D. Georeferencing with ground control points: GCPs on persistent entities"},{"location":"tutorials/tutorial_2/text/#e-clipping-the-georeferenced-raster","text":"You've certainly noticed that the sheet is framed by a black border that contains no cartographic information and that overlaps with adjacent sheets It would be better to remove this border and clip the georeferenced raster so that it fits into its corresponding grid tile. The vector grids grid_sheets and georeferencing_index have been designed so that each tile is a polygon. We're going to reuse the tile polygone as a mask shape to clip the georeferenced sheet. First, we need to isolate the tile corresponding to the sheet into a separate layer. Hide the georeferenced sheet by unchecking it in the Layer Pane si the the tile in georeferencing_index becomes visible. Select this layer in the Layer Pane, then with the map tool entity selection click on the tile to select it. Hit CRTL+C or go to Edit->Copy entities to copy the selected tile polygon. Then, go to Edit->Paste entitie as...-> New Vector Layer to paste the polygon to a new layer and save it as a GeoJSON file to Tutorial 2/output/mask.geosjon . The resulting layer, containing only the copy-pasted tile, should be automatically loaded to QGIS as a new layer named mask . Now go to the menu Raster->Extraction->Clip vector layer by mask layer and configure clipping as below. Don't forget to check \"Create an output alpha band\" so that clipped borders are transparent. This will create a new georeferenced TIF file. Choose to save it as Tutorial 2/output/d_{sheet_number}_georeferenced_clipped.tif , and click Run . The final map, georeferenced and without black borders, should now be displayed in QGIS: This ends the tutorial on georeferencing in QGIS ! Please do no delete the files d_{sheet_number}_georeferenced_clipped.tif and d_{sheet_number}_georeferenced_clipped.tif . We'll collect them at the end of the session to create a single georeferenced map based on everyone's contributions. Thank you !","title":"E. Clipping the georeferenced raster"},{"location":"tutorials/tutorial_2_bak/text/","text":"2. Georefencing historical maps A. Preliminary steps Copy the folder Tutorial_2 to your working directory. Open the preconfigured QGIS project Tutorial_2/project.QGZ Select a MeilenBlatt to georeference in the list available in the layer georeferencing_index . Each participant should chose a different sheet . In QGIS, enable automatic snapping from Project->Snapping options... . Toggle ![[Pasted image 20230705183316.png]] and keep the default options: This will make the cursor automatically snap to the closest vertex in the vector layers during coordinate capture. B. Fast interactive georeferencing \ud83d\udee0\ufe0f Install the \"Freehand raster georeferencer\" plugin. After installing the plugin, a set of tools will appear in the QGIS toolbar: Click on and open the Meilenblatt that you have chosen. Use the tools MO[ve] , RO[tate] , SC[ale] and 2P (2 points transform) to roughly fit the sheet in its corresponding cell in the grid. You can also try to approximately match the places in the sheet with the point places in the vector layer hov_places . Once you are satisfied with the result, click on and save it to a file named d_{sheet_number}_georeferenced_fast.png in the folder Tutorial_2/output . Open the Tutorial_2/output directory using your computer's file browser. You will notice that the georeferenced file is accompanied by a .pgw file. This simple text file is known as a World File , which contains the parameters for the rigid geometric transformation used by the GIS to display the PNG image within a specific coordinate reference system. You can open this file with a text editor and refer to the description of the WorldFile format on Wikipedia to see what information is required to display a georeferenced image.\" \u2139\ufe0f When copying/moving a georeferenced image that has a companion World File, make sure to also copy or move the world file along with it! \u2139\ufe0fHere, the georeferenced PNG has not been distorted during the georeferencing process. The output PNG is identical to the original image, and all the georeferencing information is stored in the World File. This is possible because the Freehand georeferencer only performs linear transforms. However, with more advanced georeferencing techniques, the original image often needs to be locally distorted. In such cases, the resulting georeferenced image differs from the original one. C. Georeferencing with ground control points: the grid technique a. Introduction The freehand raster georeferencer is an incredibly valuable tool for quick and approximate georeferencing. However, its effectiveness is often limited when precise georeferencing is required. Historical maps typically have poor planimetric accuracy. Aligning them with a reference map, such as OpenStreetMap, often involves distorting the historical maps to ensure their content aligns with the reference. This distortion is necessary to achieve a proper match between the two maps. Linear transformations are generally not sufficient for historical maps. Non-linear methods such as polynomial transformations or thin plate splines need to be employed to achieve more accurate and precise results. Such methods require a set of ground control points (GCP) . The idea behind GCPs is to establish a correspondence between a pixel position in the source image and a geographic or projected position in an coordinate reference system. Thus, a GCP is a pair of points that are typically placed on the depiction of the same geographic entity both in the image and on a reference map already in a geo/projected CRS like, for instance, the OpenStreetMap basemap. These entities can be anything, depending on the image to process: buildings, natural objects, roads, ... Unfortunately, the landscapes depicted in historical maps often no longer exist, making it challenging to find suitable GCPs. Furthermore, when dealing with maps composed of multiple sheets, such as the Meilenbl\u00e4tter , placing GCPs solely on geographic entities does not provide control over how adjacent sheets should be stitched together. In other words, the original grid structure of the sheet is not preserved during the georeferencing process. In so\u00f9me cases, maps like the Meilenbl\u00e4tter include a cartographic grid with well-documented parameters such as its resolution, dimensions, and orientation, which allows for its reconstruction in the geographic reference system. A commonly employed and effective approach is to define GCPs on this reconstructed grid. This approach ensures that the georeferenced sheets align correctly with each other. It also helps prevent interpretation errors regarding the correspondence between GCPs placed on different geographic entities. This method provides a robust solution while maintaining accuracy during the georeferencing process. b. GCP-based georeferencing on the Meilenbl\u00e4tter grid \ud83d\udee0\ufe0f Open the QGIS georeferencer from the menu Layer->Georeferencer . Click on ![[Pasted image 20230705182811.png]] to load the the original, non-georeferenced Meilenblatt . Use the Add Point tool ![[Pasted image 20230705183013.png]] to define GCPs on each corner of the sheet, both in the image view and the map view, using the recreated grid georeferencing_index . ![[Pasted image 20230705184245.png]] Save the GCPs in Tutorial_2/output/d_{sheet_number}.png.points using ![[Pasted image 20230705184956.png]] (or from File->Save GCP Points as... ) Next, click on Transformation Settings ![[Pasted image 20230705184409.png]] to access the settings for the transformation. Here, you can specify the type of transformation method to be applied and the target Coordinate Reference System (CRS), among other options. To ensure the corners of the image match precisely, select \"Thin Plate Spline\" as the transform type and set the target CRS to EPSG:3398 (RD/83 / 3-degree Gauss-Kruger zone 4) . Save the georeferenced image as Tutorial_2/output/d_{sheet_number}_georeferenced_grid.tif and keep the resampling method unchanged: ![[Pasted image 20230705184913.png]] Click OK to confirm the settings and initiate the georeferencing process by clicking the button ![[Pasted image 20230705185320.png]]. The georeferenced sheet should then be automatically loaded into the project. Click OK and run the georefencing with the button![[Pasted image 20230705185320.png]]. The georeferenced sheet should be automatically loaded into the project. Notice how the georeferenced sheet does not align well with the HOV places or the OSM basemap. This is the result of two factors: the imperfect accuracy of the grid and the inherent spatial inaccuracies within the Meilenbl\u00e4tter . To achieve a more accurate georeferencing of the map content, we need to locally warp it. This can be accomplished by adding GCPs directly onto the geographic entities depicted in the map. D. Georeferencing with ground control points: GCPs on persistent entities Because setting GCPs only on entities would cause mismatches between adjacent sheets, we want to retain the GPCs put on the grid corners increase the number of control points. This time we will use the OSM basemap as the reference. \ud83d\udee0\ufe0f Open the georeferencer and load the original sheet image once again. Import the grid GCPs that were previously defined using the button ![[Pasted image 20230705190605.png]]. Look for entities that are depicted both in the OSM reference map and in the sheet, i.e. entities in the Meilenblatt that still exist today. The best candidates for GCPs are churches since they were commonly used as reference points during the topographic survey of the Meilenbl\u00e4tter . \u2139\ufe0f There is no golden rule on the placement strategy for GCPs as it varies depending on the specific map being processed. However, there are some best practices that can help achieve higher-quality georeferencing: - The more GCPs, the better, but it's preferable to have a few reliable points rather than many questionable ones. - Aim to cover the entire sheet with GCPs. Since the geometric transformation relies solely on the information provided by the GCPs, it's best to avoid leaving large areas of the sheet empty of GCPs to prevent dramatic distortions in those areas. - Tall and compact structures such as churches, bell towers, and castles are excellent candidates for GCPs. They were often used as triangulation points during the topographic survey of historical maps, making their positions on the map more accurate and reliable compared to features like roads or mountain summits. ![[Pasted image 20230705191553.png|300]] ![[Pasted image 20230705191606.png|300]] Figure: The same church depicted in a Meilenblatt and on OSM. The point is the location of that place regirstered in the HOV. Once you have added a reasonable number of control points, run a new georefenrencing using the same transformation as before. Save the georeferenced image as Tutorial_2/output/d_{sheet_number}_georeferenced_dense.tif . \u2139\ufe0f Feel free to run intermediate georeferencings. Working incrementally and adding/adjusting GCPs along the way helps maintain control over their quality and improves the final outcome. Finally, save the GCPs as Tutorial_2/output/d_{sheet_number}_dense_.png.points . Compare the three different georeferencings visually and observe the effects of the warping on the resulting map, particularly on the edges of the sheet.","title":"2. Georefencing historical maps"},{"location":"tutorials/tutorial_2_bak/text/#2-georefencing-historical-maps","text":"","title":"2. Georefencing historical maps"},{"location":"tutorials/tutorial_2_bak/text/#a-preliminary-steps","text":"Copy the folder Tutorial_2 to your working directory. Open the preconfigured QGIS project Tutorial_2/project.QGZ Select a MeilenBlatt to georeference in the list available in the layer georeferencing_index . Each participant should chose a different sheet . In QGIS, enable automatic snapping from Project->Snapping options... . Toggle ![[Pasted image 20230705183316.png]] and keep the default options: This will make the cursor automatically snap to the closest vertex in the vector layers during coordinate capture.","title":"A. Preliminary steps"},{"location":"tutorials/tutorial_2_bak/text/#b-fast-interactive-georeferencing","text":"\ud83d\udee0\ufe0f Install the \"Freehand raster georeferencer\" plugin. After installing the plugin, a set of tools will appear in the QGIS toolbar: Click on and open the Meilenblatt that you have chosen. Use the tools MO[ve] , RO[tate] , SC[ale] and 2P (2 points transform) to roughly fit the sheet in its corresponding cell in the grid. You can also try to approximately match the places in the sheet with the point places in the vector layer hov_places . Once you are satisfied with the result, click on and save it to a file named d_{sheet_number}_georeferenced_fast.png in the folder Tutorial_2/output . Open the Tutorial_2/output directory using your computer's file browser. You will notice that the georeferenced file is accompanied by a .pgw file. This simple text file is known as a World File , which contains the parameters for the rigid geometric transformation used by the GIS to display the PNG image within a specific coordinate reference system. You can open this file with a text editor and refer to the description of the WorldFile format on Wikipedia to see what information is required to display a georeferenced image.\" \u2139\ufe0f When copying/moving a georeferenced image that has a companion World File, make sure to also copy or move the world file along with it! \u2139\ufe0fHere, the georeferenced PNG has not been distorted during the georeferencing process. The output PNG is identical to the original image, and all the georeferencing information is stored in the World File. This is possible because the Freehand georeferencer only performs linear transforms. However, with more advanced georeferencing techniques, the original image often needs to be locally distorted. In such cases, the resulting georeferenced image differs from the original one.","title":"B. Fast interactive georeferencing"},{"location":"tutorials/tutorial_2_bak/text/#c-georeferencing-with-ground-control-points-the-grid-technique","text":"","title":"C. Georeferencing with ground control points: the grid technique"},{"location":"tutorials/tutorial_2_bak/text/#a-introduction","text":"The freehand raster georeferencer is an incredibly valuable tool for quick and approximate georeferencing. However, its effectiveness is often limited when precise georeferencing is required. Historical maps typically have poor planimetric accuracy. Aligning them with a reference map, such as OpenStreetMap, often involves distorting the historical maps to ensure their content aligns with the reference. This distortion is necessary to achieve a proper match between the two maps. Linear transformations are generally not sufficient for historical maps. Non-linear methods such as polynomial transformations or thin plate splines need to be employed to achieve more accurate and precise results. Such methods require a set of ground control points (GCP) . The idea behind GCPs is to establish a correspondence between a pixel position in the source image and a geographic or projected position in an coordinate reference system. Thus, a GCP is a pair of points that are typically placed on the depiction of the same geographic entity both in the image and on a reference map already in a geo/projected CRS like, for instance, the OpenStreetMap basemap. These entities can be anything, depending on the image to process: buildings, natural objects, roads, ... Unfortunately, the landscapes depicted in historical maps often no longer exist, making it challenging to find suitable GCPs. Furthermore, when dealing with maps composed of multiple sheets, such as the Meilenbl\u00e4tter , placing GCPs solely on geographic entities does not provide control over how adjacent sheets should be stitched together. In other words, the original grid structure of the sheet is not preserved during the georeferencing process. In so\u00f9me cases, maps like the Meilenbl\u00e4tter include a cartographic grid with well-documented parameters such as its resolution, dimensions, and orientation, which allows for its reconstruction in the geographic reference system. A commonly employed and effective approach is to define GCPs on this reconstructed grid. This approach ensures that the georeferenced sheets align correctly with each other. It also helps prevent interpretation errors regarding the correspondence between GCPs placed on different geographic entities. This method provides a robust solution while maintaining accuracy during the georeferencing process.","title":"a. Introduction"},{"location":"tutorials/tutorial_2_bak/text/#b-gcp-based-georeferencing-on-the-meilenblatter-grid","text":"\ud83d\udee0\ufe0f Open the QGIS georeferencer from the menu Layer->Georeferencer . Click on ![[Pasted image 20230705182811.png]] to load the the original, non-georeferenced Meilenblatt . Use the Add Point tool ![[Pasted image 20230705183013.png]] to define GCPs on each corner of the sheet, both in the image view and the map view, using the recreated grid georeferencing_index . ![[Pasted image 20230705184245.png]] Save the GCPs in Tutorial_2/output/d_{sheet_number}.png.points using ![[Pasted image 20230705184956.png]] (or from File->Save GCP Points as... ) Next, click on Transformation Settings ![[Pasted image 20230705184409.png]] to access the settings for the transformation. Here, you can specify the type of transformation method to be applied and the target Coordinate Reference System (CRS), among other options. To ensure the corners of the image match precisely, select \"Thin Plate Spline\" as the transform type and set the target CRS to EPSG:3398 (RD/83 / 3-degree Gauss-Kruger zone 4) . Save the georeferenced image as Tutorial_2/output/d_{sheet_number}_georeferenced_grid.tif and keep the resampling method unchanged: ![[Pasted image 20230705184913.png]] Click OK to confirm the settings and initiate the georeferencing process by clicking the button ![[Pasted image 20230705185320.png]]. The georeferenced sheet should then be automatically loaded into the project. Click OK and run the georefencing with the button![[Pasted image 20230705185320.png]]. The georeferenced sheet should be automatically loaded into the project. Notice how the georeferenced sheet does not align well with the HOV places or the OSM basemap. This is the result of two factors: the imperfect accuracy of the grid and the inherent spatial inaccuracies within the Meilenbl\u00e4tter . To achieve a more accurate georeferencing of the map content, we need to locally warp it. This can be accomplished by adding GCPs directly onto the geographic entities depicted in the map.","title":"b. GCP-based georeferencing on the Meilenbl\u00e4tter grid"},{"location":"tutorials/tutorial_2_bak/text/#d-georeferencing-with-ground-control-points-gcps-on-persistent-entities","text":"Because setting GCPs only on entities would cause mismatches between adjacent sheets, we want to retain the GPCs put on the grid corners increase the number of control points. This time we will use the OSM basemap as the reference. \ud83d\udee0\ufe0f Open the georeferencer and load the original sheet image once again. Import the grid GCPs that were previously defined using the button ![[Pasted image 20230705190605.png]]. Look for entities that are depicted both in the OSM reference map and in the sheet, i.e. entities in the Meilenblatt that still exist today. The best candidates for GCPs are churches since they were commonly used as reference points during the topographic survey of the Meilenbl\u00e4tter . \u2139\ufe0f There is no golden rule on the placement strategy for GCPs as it varies depending on the specific map being processed. However, there are some best practices that can help achieve higher-quality georeferencing: - The more GCPs, the better, but it's preferable to have a few reliable points rather than many questionable ones. - Aim to cover the entire sheet with GCPs. Since the geometric transformation relies solely on the information provided by the GCPs, it's best to avoid leaving large areas of the sheet empty of GCPs to prevent dramatic distortions in those areas. - Tall and compact structures such as churches, bell towers, and castles are excellent candidates for GCPs. They were often used as triangulation points during the topographic survey of historical maps, making their positions on the map more accurate and reliable compared to features like roads or mountain summits. ![[Pasted image 20230705191553.png|300]] ![[Pasted image 20230705191606.png|300]] Figure: The same church depicted in a Meilenblatt and on OSM. The point is the location of that place regirstered in the HOV. Once you have added a reasonable number of control points, run a new georefenrencing using the same transformation as before. Save the georeferenced image as Tutorial_2/output/d_{sheet_number}_georeferenced_dense.tif . \u2139\ufe0f Feel free to run intermediate georeferencings. Working incrementally and adding/adjusting GCPs along the way helps maintain control over their quality and improves the final outcome. Finally, save the GCPs as Tutorial_2/output/d_{sheet_number}_dense_.png.points . Compare the three different georeferencings visually and observe the effects of the warping on the resulting map, particularly on the edges of the sheet.","title":"D. Georeferencing with ground control points: GCPs on persistent entities"},{"location":"tutorials/tutorial_3/text/","text":"3. Introduction to vectorisation in QGIS This short tutorial is a introduction to the basics of vectorisation in QGIS with very simple data. The goal is to manually capture the mills and calvaries that are pictured on the Meilenbl\u00e4tter with dedicated symbols: Symbol Description M\u00fchle: symbol of a waterwheel or a windmill Kreuzweg: black cross often at crossroads. A. Preliminary steps Download the data for this tutorial (~200Kb): https://www.swisstransfer.com/d/24a42765-42ac-49a1-83f2-5c8b6cf04e82 Extract the zip archive to your working directory. If needed, copy the folder Tutorial_3 to your working directory. Open the QGIS project Tutorial_3/project.QGZ B. Creation of a new vector layer Create a new point layer from Layer->Create Layer->New Temporary Scratch Layer . Create a layer named \"Point places\" composed of point entities whose coordinates are in the CRS EPSG:3398. This layer should also include a field for categorizing the point place. Follow the instructions in the figure below: At the moment, the layer is only temporary and stored in RAM, as shown by the chipset icon next to the layer name: . Save this layer as a GEOJSON file in the Tutorial_3/output folder under the name meilenblaetter_pointplaces.geojson . Once saved, the file will be automatically opened by QGIS. You can safely delete the temporary layer ( right click->Remove Layer ). C. Getting started with vectorisation Dans QGIS, toutes les couches sont par d\u00e9faut en lecture seule.Pour que leur modification soit possible, il faut d'abord toggle le mode \u00e9dition. Activate edit mode for the Point places layer: Select it in the Layer Pane, then Right click->Toggle editing or click on the icon in the QGIS toolbar. A small pencil icon in front of the layer name in the Layer Pane indicates that the layer is in \"write mode\": In the QGIS toolbar, activate the map tool Add Point Feature and add a point anywhere on the map (don't worry, this is just a test!). This should open a pop-up form to fill in the attributes of the point feature just created. You can see that it's a free text field, defaulting to NULL. Not a very satisfying form! Let's see how we can improve it. Click Cancel to cancel entity creation. . Open the Point places layer properties ( Right click->Properties ) and look for the Attribute Form tab. We're going to configure the input form ourselves. Change the form type value from Autogenerate to Drag and Drop Designer . This opens an editor that lets you compose an form by simply dragging and dropping from the left-hand column Available Widgets to the right-hand column Form Layout . The field placetype should be in the Form Layout column by default. Select the field to configure it in detail, so that: Its display alias should be \"Place type (according to the map)\". The widget is a combo box (i.e. Value Map) with two possible values: Value Description M\u00fchle M\u00fchle: symbol of a waterwheel or a windmill Kreuzweg Kreuzweg: black cross often at crossroads. If you try to create a point again, the form is updated with your settings: Save the project . The custom form will be stored in the QGZ file. Try to find at least one mill and one calvary inside the Case study areas ! \u2139\ufe0f Mills can be found in the \"Sch\u00f6nburgische herrschaften\" and \"Bautzener Kreis\" region. Calvaries/\"Kreuzwegs\" are scattered across the \"Bautzener Kreis\" region. Regularly save your edits, either by: untoggling the edit mode to force saving or clicking on the button just to the right of , or right-clicking on the layer in the Layer Pane and selecting Save layer edits . This ends the first trials with vectorisation in QGIS ! Please do no delete the file meilenblaetter_pointplaces.geojson and, at the end of the day, send the file to bertrand [at] dumenieu [dot] ehess [dot] fr . They will contribute to the DigiKAR datasets. Thank you !","title":"3. Introduction to vectorisation in QGIS"},{"location":"tutorials/tutorial_3/text/#3-introduction-to-vectorisation-in-qgis","text":"This short tutorial is a introduction to the basics of vectorisation in QGIS with very simple data. The goal is to manually capture the mills and calvaries that are pictured on the Meilenbl\u00e4tter with dedicated symbols: Symbol Description M\u00fchle: symbol of a waterwheel or a windmill Kreuzweg: black cross often at crossroads.","title":"3. Introduction to vectorisation in QGIS"},{"location":"tutorials/tutorial_3/text/#a-preliminary-steps","text":"Download the data for this tutorial (~200Kb): https://www.swisstransfer.com/d/24a42765-42ac-49a1-83f2-5c8b6cf04e82 Extract the zip archive to your working directory. If needed, copy the folder Tutorial_3 to your working directory. Open the QGIS project Tutorial_3/project.QGZ","title":"A. Preliminary steps"},{"location":"tutorials/tutorial_3/text/#b-creation-of-a-new-vector-layer","text":"Create a new point layer from Layer->Create Layer->New Temporary Scratch Layer . Create a layer named \"Point places\" composed of point entities whose coordinates are in the CRS EPSG:3398. This layer should also include a field for categorizing the point place. Follow the instructions in the figure below: At the moment, the layer is only temporary and stored in RAM, as shown by the chipset icon next to the layer name: . Save this layer as a GEOJSON file in the Tutorial_3/output folder under the name meilenblaetter_pointplaces.geojson . Once saved, the file will be automatically opened by QGIS. You can safely delete the temporary layer ( right click->Remove Layer ).","title":"B. Creation of a new vector layer"},{"location":"tutorials/tutorial_3/text/#c-getting-started-with-vectorisation","text":"Dans QGIS, toutes les couches sont par d\u00e9faut en lecture seule.Pour que leur modification soit possible, il faut d'abord toggle le mode \u00e9dition. Activate edit mode for the Point places layer: Select it in the Layer Pane, then Right click->Toggle editing or click on the icon in the QGIS toolbar. A small pencil icon in front of the layer name in the Layer Pane indicates that the layer is in \"write mode\": In the QGIS toolbar, activate the map tool Add Point Feature and add a point anywhere on the map (don't worry, this is just a test!). This should open a pop-up form to fill in the attributes of the point feature just created. You can see that it's a free text field, defaulting to NULL. Not a very satisfying form! Let's see how we can improve it. Click Cancel to cancel entity creation. . Open the Point places layer properties ( Right click->Properties ) and look for the Attribute Form tab. We're going to configure the input form ourselves. Change the form type value from Autogenerate to Drag and Drop Designer . This opens an editor that lets you compose an form by simply dragging and dropping from the left-hand column Available Widgets to the right-hand column Form Layout . The field placetype should be in the Form Layout column by default. Select the field to configure it in detail, so that: Its display alias should be \"Place type (according to the map)\". The widget is a combo box (i.e. Value Map) with two possible values: Value Description M\u00fchle M\u00fchle: symbol of a waterwheel or a windmill Kreuzweg Kreuzweg: black cross often at crossroads. If you try to create a point again, the form is updated with your settings: Save the project . The custom form will be stored in the QGZ file. Try to find at least one mill and one calvary inside the Case study areas ! \u2139\ufe0f Mills can be found in the \"Sch\u00f6nburgische herrschaften\" and \"Bautzener Kreis\" region. Calvaries/\"Kreuzwegs\" are scattered across the \"Bautzener Kreis\" region. Regularly save your edits, either by: untoggling the edit mode to force saving or clicking on the button just to the right of , or right-clicking on the layer in the Layer Pane and selecting Save layer edits . This ends the first trials with vectorisation in QGIS ! Please do no delete the file meilenblaetter_pointplaces.geojson and, at the end of the day, send the file to bertrand [at] dumenieu [dot] ehess [dot] fr . They will contribute to the DigiKAR datasets. Thank you !","title":"C. Getting started with vectorisation"},{"location":"tutorials/tutorial_4/text/","text":"4. Collaborative vectorisation The last tutorial demonstrated the vectorisation of data in a vector-based geographic data file stored locally on the computer. The purpose of this last tutorial is to experiment with collaborative vectorisation, where each QGIS client connects to a vector data source stored on a remote geographic database. This time, each participant will contribute to a common dataset. A. Preliminary steps Download the data for this tutorial (~200Kb): https://www.swisstransfer.com/d/c36a7046-2d38-4ee6-8d8e-245c37cad77b Extract the zip archive to your working directory. Open the QGIS project Tutorial_4/project.QGZ B. Setting-up the project 1. Connecting to the remote PostgreSQL database A PostgreSQL database has been configured prior to the tutorial, and a bootstrap dataset has been uploaded. To load this dataset as a layer in QGIS, you need first to connect to the PostgreSQL server. Go to Layer-> Data Source Manager , and from the tab PostgreSQL create a New connection wich the following information: Name: give this connection a name, like \"DigiKAR QGIS tutorial\" Service: leave empty Host: geohistoricaldata.org Port: 5432 Database: qgis-turorial In Authentication , chose Basic and set the following credentials: - Username: qgis-tutorial - Password: qgis-tutorial Click on store so QGIS will store the credentials. Click on Test Connection to ensure that everything is fine, and click OK . Now, click on Connect to read the available geodata table from the database. The table road_network should be listed in the public schema. Select the table and click on Add to load it. \u2139\ufe0f Note how the layer has been loaded with a categorized symbology. This is possible because QGIS is able to store its own layer styles within the database and load them when needed. 2. Setting up the map tools Road networks are significantly more complex than the mills and calvaries points from that last tutorial, because topology comes into play. Cependant, la topologie d'un r\u00e9seau peut-\u00eatre corrig\u00e9e automatiquement avec un post-traitement, \u00e0 condition que le r\u00e9seau soit au moins navigable, c'est \u00e0 dire que tous les segments d'une intersection se touchent exactement au m\u00eame point. Cette condition est impossible \u00e0 respecter manuellement, mais QGIS propose des options un m\u00e9canisme de snapping qui permet de r\u00e9aliser cela tr\u00e8s facilement. 1. Go to the menu Project->Snapping options and enable snapping . 2. Allow snapping of vertices and segments , leaving the default snapping distance. 3. Also toggle Topological editing and Snapping on intersection . With topological editing, when you move common vertices/segments, QGIS will also move them in the geometries of the neighboring feature. Snapping on intersection allows you to snap to geometry intersections of snapping enabled layers, even if there are no vertices at the intersections. \u2139\ufe0f More details about snapping is available in the QGIS documentation: https://docs.qgis.org/3.28/en/docs/user_manual/working_with_vector/editing_geometry_attributes.htm C. Let's vectorize ! This part exercise will be carried out collectively during the session","title":"4. Collaborative vectorisation"},{"location":"tutorials/tutorial_4/text/#4-collaborative-vectorisation","text":"The last tutorial demonstrated the vectorisation of data in a vector-based geographic data file stored locally on the computer. The purpose of this last tutorial is to experiment with collaborative vectorisation, where each QGIS client connects to a vector data source stored on a remote geographic database. This time, each participant will contribute to a common dataset.","title":"4. Collaborative vectorisation"},{"location":"tutorials/tutorial_4/text/#a-preliminary-steps","text":"Download the data for this tutorial (~200Kb): https://www.swisstransfer.com/d/c36a7046-2d38-4ee6-8d8e-245c37cad77b Extract the zip archive to your working directory. Open the QGIS project Tutorial_4/project.QGZ","title":"A. Preliminary steps"},{"location":"tutorials/tutorial_4/text/#b-setting-up-the-project","text":"","title":"B. Setting-up the project"},{"location":"tutorials/tutorial_4/text/#1-connecting-to-the-remote-postgresql-database","text":"A PostgreSQL database has been configured prior to the tutorial, and a bootstrap dataset has been uploaded. To load this dataset as a layer in QGIS, you need first to connect to the PostgreSQL server. Go to Layer-> Data Source Manager , and from the tab PostgreSQL create a New connection wich the following information: Name: give this connection a name, like \"DigiKAR QGIS tutorial\" Service: leave empty Host: geohistoricaldata.org Port: 5432 Database: qgis-turorial In Authentication , chose Basic and set the following credentials: - Username: qgis-tutorial - Password: qgis-tutorial Click on store so QGIS will store the credentials. Click on Test Connection to ensure that everything is fine, and click OK . Now, click on Connect to read the available geodata table from the database. The table road_network should be listed in the public schema. Select the table and click on Add to load it. \u2139\ufe0f Note how the layer has been loaded with a categorized symbology. This is possible because QGIS is able to store its own layer styles within the database and load them when needed.","title":"1. Connecting to the remote PostgreSQL database"},{"location":"tutorials/tutorial_4/text/#2-setting-up-the-map-tools","text":"Road networks are significantly more complex than the mills and calvaries points from that last tutorial, because topology comes into play. Cependant, la topologie d'un r\u00e9seau peut-\u00eatre corrig\u00e9e automatiquement avec un post-traitement, \u00e0 condition que le r\u00e9seau soit au moins navigable, c'est \u00e0 dire que tous les segments d'une intersection se touchent exactement au m\u00eame point. Cette condition est impossible \u00e0 respecter manuellement, mais QGIS propose des options un m\u00e9canisme de snapping qui permet de r\u00e9aliser cela tr\u00e8s facilement. 1. Go to the menu Project->Snapping options and enable snapping . 2. Allow snapping of vertices and segments , leaving the default snapping distance. 3. Also toggle Topological editing and Snapping on intersection . With topological editing, when you move common vertices/segments, QGIS will also move them in the geometries of the neighboring feature. Snapping on intersection allows you to snap to geometry intersections of snapping enabled layers, even if there are no vertices at the intersections. \u2139\ufe0f More details about snapping is available in the QGIS documentation: https://docs.qgis.org/3.28/en/docs/user_manual/working_with_vector/editing_geometry_attributes.htm","title":"2. Setting up the map tools"},{"location":"tutorials/tutorial_4/text/#c-lets-vectorize","text":"This part exercise will be carried out collectively during the session","title":"C. Let's vectorize !"}]}